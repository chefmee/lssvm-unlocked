{
	"id": "b3b94738bbec996478b2e40caafbe28b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/bonding-curves/LinearCurve.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {ICurve} from \"./ICurve.sol\";\nimport {CurveErrorCodes} from \"./CurveErrorCodes.sol\";\nimport {FixedPointMathLib} from \"../../lib/solmate/src/utils/FixedPointMathLib.sol\";\n\n/*\n    @author 0xmons and boredGenius\n    @notice Bonding curve logic for a linear curve, where each buy/sell changes spot price by adding/substracting delta\n*/\ncontract LinearCurve is ICurve, CurveErrorCodes {\n    using FixedPointMathLib for uint256;\n\n    /**\n        @dev See {ICurve-validateDelta}\n     */\n    function validateDelta(\n        uint128 /*delta*/\n    ) external pure override returns (bool valid) {\n        // For a linear curve, all values of delta are valid\n        return true;\n    }\n\n    /**\n        @dev See {ICurve-validateSpotPrice}\n     */\n    function validateSpotPrice(\n        uint128 /* newSpotPrice */\n    ) external pure override returns (bool) {\n        // For a linear curve, all values of spot price are valid\n        return true;\n    }\n\n    /**\n        @dev See {ICurve-getBuyInfo}\n     */\n    function getBuyInfo(\n        uint128 spotPrice,\n        uint128 delta,\n        uint256 numItems,\n        uint256 feeMultiplier,\n        uint256 protocolFeeMultiplier\n    )\n        external\n        pure\n        override\n        returns (\n            Error error,\n            uint128 newSpotPrice,\n            uint128 newDelta,\n            uint256 inputValue,\n            uint256 protocolFee\n        )\n    {\n        // We only calculate changes for buying 1 or more NFTs\n        if (numItems == 0) {\n            return (Error.INVALID_NUMITEMS, 0, 0, 0, 0);\n        }\n\n        // For a linear curve, the spot price increases by delta for each item bought\n        uint256 newSpotPrice_ = spotPrice + delta * numItems;\n        if (newSpotPrice_ > type(uint128).max) {\n            return (Error.SPOT_PRICE_OVERFLOW, 0, 0, 0, 0);\n        }\n        newSpotPrice = uint128(newSpotPrice_);\n\n        // Spot price is assumed to be the instant sell price. To avoid arbitraging LPs, we adjust the buy price upwards.\n        // If spot price for buy and sell were the same, then someone could buy 1 NFT and then sell for immediate profit.\n        // EX: Let S be spot price. Then buying 1 NFT costs S ETH, now new spot price is (S+delta).\n        // The same person could then sell for (S+delta) ETH, netting them delta ETH profit.\n        // If spot price for buy and sell differ by delta, then buying costs (S+delta) ETH.\n        // The new spot price would become (S+delta), so selling would also yield (S+delta) ETH.\n        uint256 buySpotPrice = spotPrice + delta;\n\n        // If we buy n items, then the total cost is equal to:\n        // (buy spot price) + (buy spot price + 1*delta) + (buy spot price + 2*delta) + ... + (buy spot price + (n-1)*delta)\n        // This is equal to n*(buy spot price) + (delta)*(n*(n-1))/2\n        // because we have n instances of buy spot price, and then we sum up from delta to (n-1)*delta\n        inputValue =\n            numItems *\n            buySpotPrice +\n            (numItems * (numItems - 1) * delta) /\n            2;\n\n        // Account for the protocol fee, a flat percentage of the buy amount\n        protocolFee = inputValue.fmul(\n            protocolFeeMultiplier,\n            FixedPointMathLib.WAD\n        );\n\n        // Account for the trade fee, only for Trade pools\n        inputValue += inputValue.fmul(feeMultiplier, FixedPointMathLib.WAD);\n\n        // Add the protocol fee to the required input amount\n        inputValue += protocolFee;\n\n        // Keep delta the same\n        newDelta = delta;\n\n        // If we got all the way here, no math error happened\n        error = Error.OK;\n    }\n\n    /**\n        @dev See {ICurve-getSellInfo}\n     */\n    function getSellInfo(\n        uint128 spotPrice,\n        uint128 delta,\n        uint256 numItems,\n        uint256 feeMultiplier,\n        uint256 protocolFeeMultiplier\n    )\n        external\n        pure\n        override\n        returns (\n            Error error,\n            uint128 newSpotPrice,\n            uint128 newDelta,\n            uint256 outputValue,\n            uint256 protocolFee\n        )\n    {\n        // We only calculate changes for selling 1 or more NFTs\n        if (numItems == 0) {\n            return (Error.INVALID_NUMITEMS, 0, 0, 0, 0);\n        }\n\n        // We first calculate the change in spot price after selling all of the items\n        uint256 totalPriceDecrease = delta * numItems;\n\n        // If the current spot price is less than the total amount that the spot price should change by...\n        if (spotPrice < totalPriceDecrease) {\n            // Then we set the new spot price to be 0. (Spot price is never negative)\n            newSpotPrice = 0;\n\n            // We calculate how many items we can sell into the linear curve until the spot price reaches 0, rounding up\n            uint256 numItemsTillZeroPrice = spotPrice / delta + 1;\n            numItems = numItemsTillZeroPrice;\n        }\n        // Otherwise, the current spot price is greater than or equal to the total amount that the spot price changes\n        // Thus we don't need to calculate the maximum number of items until we reach zero spot price, so we don't modify numItems\n        else {\n            // The new spot price is just the change between spot price and the total price change\n            newSpotPrice = spotPrice - uint128(totalPriceDecrease);\n        }\n\n        // If we sell n items, then the total sale amount is:\n        // (spot price) + (spot price - 1*delta) + (spot price - 2*delta) + ... + (spot price - (n-1)*delta)\n        // This is equal to n*(spot price) - (delta)*(n*(n-1))/2\n        outputValue =\n            numItems *\n            spotPrice -\n            (numItems * (numItems - 1) * delta) /\n            2;\n\n        // Account for the protocol fee, a flat percentage of the sell amount\n        protocolFee = outputValue.fmul(\n            protocolFeeMultiplier,\n            FixedPointMathLib.WAD\n        );\n\n        // Account for the trade fee, only for Trade pools\n        outputValue -= outputValue.fmul(feeMultiplier, FixedPointMathLib.WAD);\n\n        // Subtract the protocol fee from the output amount to the seller\n        outputValue -= protocolFee;\n\n        // Keep delta the same\n        newDelta = delta;\n\n        // If we reached here, no math errors\n        error = Error.OK;\n    }\n}\n"
			},
			"lib/solmate/src/utils/FixedPointMathLib.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Arithmetic library with operations for fixed-point numbers.\n/// @author Modified from Dappsys V2 (https://github.com/dapp-org/dappsys-v2/blob/main/src/math.sol)\n/// and ABDK (https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol)\nlibrary FixedPointMathLib {\n    /*///////////////////////////////////////////////////////////////\n                            COMMON BASE UNITS\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 internal constant YAD = 1e8;\n    uint256 internal constant WAD = 1e18;\n    uint256 internal constant RAY = 1e27;\n    uint256 internal constant RAD = 1e45;\n\n    /*///////////////////////////////////////////////////////////////\n                         FIXED POINT OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function fmul(\n        uint256 x,\n        uint256 y,\n        uint256 baseUnit\n    ) internal pure returns (uint256 z) {\n        assembly {\n            // Store x * y in z for now.\n            z := mul(x, y)\n\n            // Equivalent to require(x == 0 || (x * y) / x == y)\n            if iszero(or(iszero(x), eq(div(z, x), y))) {\n                revert(0, 0)\n            }\n\n            // If baseUnit is zero this will return zero instead of reverting.\n            z := div(z, baseUnit)\n        }\n    }\n\n    function fdiv(\n        uint256 x,\n        uint256 y,\n        uint256 baseUnit\n    ) internal pure returns (uint256 z) {\n        assembly {\n            // Store x * baseUnit in z for now.\n            z := mul(x, baseUnit)\n\n            if or(\n                // Revert if y is zero to ensure we don't divide by zero below.\n                iszero(y),\n                // Equivalent to require(x == 0 || (x * baseUnit) / x == baseUnit)\n                iszero(or(iszero(x), eq(div(z, x), baseUnit)))\n            ) {\n                revert(0, 0)\n            }\n\n            // We ensure y is not zero above, so there is never division by zero here.\n            z := div(z, y)\n        }\n    }\n\n    function fpow(\n        uint256 x,\n        uint256 n,\n        uint256 baseUnit\n    ) internal pure returns (uint256 z) {\n        assembly {\n            switch x\n            case 0 {\n                switch n\n                case 0 {\n                    z := baseUnit\n                }\n                default {\n                    z := 0\n                }\n            }\n            default {\n                switch mod(n, 2)\n                case 0 {\n                    z := baseUnit\n                }\n                default {\n                    z := x\n                }\n                let half := div(baseUnit, 2)\n                for {\n                    n := div(n, 2)\n                } n {\n                    n := div(n, 2)\n                } {\n                    let xx := mul(x, x)\n                    if iszero(eq(div(xx, x), x)) {\n                        revert(0, 0)\n                    }\n                    let xxRound := add(xx, half)\n                    if lt(xxRound, xx) {\n                        revert(0, 0)\n                    }\n                    x := div(xxRound, baseUnit)\n                    if mod(n, 2) {\n                        let zx := mul(z, x)\n                        if and(iszero(iszero(x)), iszero(eq(div(zx, x), z))) {\n                            revert(0, 0)\n                        }\n                        let zxRound := add(zx, half)\n                        if lt(zxRound, zx) {\n                            revert(0, 0)\n                        }\n                        z := div(zxRound, baseUnit)\n                    }\n                }\n            }\n        }\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                        GENERAL NUMBER UTILITIES\n    //////////////////////////////////////////////////////////////*/\n\n    function sqrt(uint256 x) internal pure returns (uint256 result) {\n        if (x == 0) return 0;\n\n        result = 1;\n\n        uint256 xAux = x;\n\n        if (xAux >= 0x100000000000000000000000000000000) {\n            xAux >>= 128;\n            result <<= 64;\n        }\n\n        if (xAux >= 0x10000000000000000) {\n            xAux >>= 64;\n            result <<= 32;\n        }\n\n        if (xAux >= 0x100000000) {\n            xAux >>= 32;\n            result <<= 16;\n        }\n\n        if (xAux >= 0x10000) {\n            xAux >>= 16;\n            result <<= 8;\n        }\n\n        if (xAux >= 0x100) {\n            xAux >>= 8;\n            result <<= 4;\n        }\n\n        if (xAux >= 0x10) {\n            xAux >>= 4;\n            result <<= 2;\n        }\n\n        if (xAux >= 0x8) result <<= 1;\n\n        unchecked {\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n            result = (result + x / result) >> 1;\n\n            uint256 roundedDownResult = x / result;\n\n            if (result > roundedDownResult) result = roundedDownResult;\n        }\n    }\n\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        return x < y ? x : y;\n    }\n\n    function max(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        return x > y ? x : y;\n    }\n}\n"
			},
			"src/bonding-curves/CurveErrorCodes.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\ncontract CurveErrorCodes {\n    enum Error {\n        OK, // No error\n        INVALID_NUMITEMS, // The numItem value is 0\n        SPOT_PRICE_OVERFLOW // The updated spot price doesn't fit into 128 bits\n    }\n}\n"
			},
			"src/bonding-curves/ICurve.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {CurveErrorCodes} from \"./CurveErrorCodes.sol\";\n\ninterface ICurve {\n    /**\n        @notice Validates if a delta value is valid for the curve. The criteria for\n        validity can be different for each type of curve, for instance ExponentialCurve\n        requires delta to be greater than 1.\n        @param delta The delta value to be validated\n        @return valid True if delta is valid, false otherwise\n     */\n    function validateDelta(uint128 delta) external pure returns (bool valid);\n\n    /**\n        @notice Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token.\n        @param newSpotPrice The new spot price to be set\n        @return valid True if the new spot price is valid, false otherwise\n     */\n    function validateSpotPrice(uint128 newSpotPrice)\n        external\n        view\n        returns (bool valid);\n\n    /**\n        @notice Given the current state of the pair and the trade, computes how much the user\n        should pay to purchase an NFT from the pair, the new spot price, and other values.\n        @param spotPrice The current selling spot price of the pair, in tokens\n        @param delta The delta parameter of the pair, what it means depends on the curve\n        @param numItems The number of NFTs the user is buying from the pair\n        @param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n        @param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n        @return error Any math calculation errors, only Error.OK means the returned values are valid\n        @return newSpotPrice The updated selling spot price, in tokens\n        @return newDelta The updated delta, used to parameterize the bonding curve\n        @return inputValue The amount that the user should pay, in tokens\n        @return protocolFee The amount of fee to send to the protocol, in tokens\n     */\n    function getBuyInfo(\n        uint128 spotPrice,\n        uint128 delta,\n        uint256 numItems,\n        uint256 feeMultiplier,\n        uint256 protocolFeeMultiplier\n    )\n        external\n        view\n        returns (\n            CurveErrorCodes.Error error,\n            uint128 newSpotPrice,\n            uint128 newDelta,\n            uint256 inputValue,\n            uint256 protocolFee\n        );\n\n    /**\n        @notice Given the current state of the pair and the trade, computes how much the user\n        should receive when selling NFTs to the pair, the new spot price, and other values.\n        @param spotPrice The current selling spot price of the pair, in tokens\n        @param delta The delta parameter of the pair, what it means depends on the curve\n        @param numItems The number of NFTs the user is selling to the pair\n        @param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n        @param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n        @return error Any math calculation errors, only Error.OK means the returned values are valid\n        @return newSpotPrice The updated selling spot price, in tokens\n        @return newDelta The updated delta, used to parameterize the bonding curve\n        @return outputValue The amount that the user should receive, in tokens\n        @return protocolFee The amount of fee to send to the protocol, in tokens\n     */\n    function getSellInfo(\n        uint128 spotPrice,\n        uint128 delta,\n        uint256 numItems,\n        uint256 feeMultiplier,\n        uint256 protocolFeeMultiplier\n    )\n        external\n        view\n        returns (\n            CurveErrorCodes.Error error,\n            uint128 newSpotPrice,\n            uint128 newDelta,\n            uint256 outputValue,\n            uint256 protocolFee\n        );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lib/solmate/src/utils/FixedPointMathLib.sol": {
				"FixedPointMathLib": {
					"abi": [],
					"devdoc": {
						"author": "Modified from Dappsys V2 (https://github.com/dapp-org/dappsys-v2/blob/main/src/math.sol) and ABDK (https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":345:5433  library FixedPointMathLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":345:5433  library FixedPointMathLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a92659e3025dca4b3a77b8a5fc94584b640c487e4dd7dee0f193424a8553428364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a92659e3025dca4b3a77b8a5fc94584b640c487e4dd7dee0f193424a8553428364736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0x26 MSIZE 0xE3 MUL 0x5D 0xCA 0x4B GASPRICE PUSH24 0xB8A5FC94584B640C487E4DD7DEE0F193424A855342836473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "345:5088:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;345:5088:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a92659e3025dca4b3a77b8a5fc94584b640c487e4dd7dee0f193424a8553428364736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0x26 MSIZE 0xE3 MUL 0x5D 0xCA 0x4B GASPRICE PUSH24 0xB8A5FC94584B640C487E4DD7DEE0F193424A855342836473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "345:5088:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"fdiv(uint256,uint256,uint256)": "infinite",
								"fmul(uint256,uint256,uint256)": "infinite",
								"fpow(uint256,uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 345,
									"end": 5433,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a92659e3025dca4b3a77b8a5fc94584b640c487e4dd7dee0f193424a8553428364736f6c63430008110033",
									".code": [
										{
											"begin": 345,
											"end": 5433,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 5433,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"lib/solmate/src/utils/FixedPointMathLib.sol",
								"src/bonding-curves/CurveErrorCodes.sol",
								"src/bonding-curves/ICurve.sol",
								"src/bonding-curves/LinearCurve.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Modified from Dappsys V2 (https://github.com/dapp-org/dappsys-v2/blob/main/src/math.sol) and ABDK (https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Arithmetic library with operations for fixed-point numbers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solmate/src/utils/FixedPointMathLib.sol\":\"FixedPointMathLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x11bae04ee197bfb3b5dbb4a95eae81f500314b76be91ad692b10f00782fc9bf6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e93f309a48206eed2f1fb9a21eb55601c86652eeeafdeec7c1dd23aec80b9587\",\"dweb:/ipfs/QmTDRdGLWTqXfYsRyCZ2vBKydXSf1JH7o2F1RCpmFHKprz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Arithmetic library with operations for fixed-point numbers.",
						"version": 1
					}
				}
			},
			"src/bonding-curves/CurveErrorCodes.sol": {
				"CurveErrorCodes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/bonding-curves/CurveErrorCodes.sol\":62:269  contract CurveErrorCodes {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/bonding-curves/CurveErrorCodes.sol\":62:269  contract CurveErrorCodes {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ded0cb81b37a9c5ae957f408b006856235380a591d191441382de7cfc2bc3b564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212204ded0cb81b37a9c5ae957f408b006856235380a591d191441382de7cfc2bc3b564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xED 0xC 0xB8 SHL CALLDATACOPY 0xA9 0xC5 0xAE SWAP6 PUSH32 0x408B006856235380A591D191441382DE7CFC2BC3B564736F6C63430008110033 ",
							"sourceMap": "62:207:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212204ded0cb81b37a9c5ae957f408b006856235380a591d191441382de7cfc2bc3b564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xED 0xC 0xB8 SHL CALLDATACOPY 0xA9 0xC5 0xAE SWAP6 PUSH32 0x408B006856235380A591D191441382DE7CFC2BC3B564736F6C63430008110033 ",
							"sourceMap": "62:207:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 62,
									"end": 269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 269,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ded0cb81b37a9c5ae957f408b006856235380a591d191441382de7cfc2bc3b564736f6c63430008110033",
									".code": [
										{
											"begin": 62,
											"end": 269,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 269,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 269,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 62,
											"end": 269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 269,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"lib/solmate/src/utils/FixedPointMathLib.sol",
								"src/bonding-curves/CurveErrorCodes.sol",
								"src/bonding-curves/ICurve.sol",
								"src/bonding-curves/LinearCurve.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bonding-curves/CurveErrorCodes.sol\":\"CurveErrorCodes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/bonding-curves/CurveErrorCodes.sol\":{\"keccak256\":\"0x921fa756278ee39ea5e10c85933f1775ff4a412b700961837097b5da72e2c2ca\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8bc64cbcac649bcc4ea42df0c913dde0c7cb90cb2e724b8ed12e4d3f37e5436c\",\"dweb:/ipfs/Qmcyh8k4pbcDB9qSPMppbAYDYgbweH4sy4AaAEjFHYHBcZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/bonding-curves/ICurve.sol": {
				"ICurve": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "spotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "delta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "numItems",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeMultiplier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFeeMultiplier",
									"type": "uint256"
								}
							],
							"name": "getBuyInfo",
							"outputs": [
								{
									"internalType": "enum CurveErrorCodes.Error",
									"name": "error",
									"type": "uint8"
								},
								{
									"internalType": "uint128",
									"name": "newSpotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "newDelta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "inputValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "spotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "delta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "numItems",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeMultiplier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFeeMultiplier",
									"type": "uint256"
								}
							],
							"name": "getSellInfo",
							"outputs": [
								{
									"internalType": "enum CurveErrorCodes.Error",
									"name": "error",
									"type": "uint8"
								},
								{
									"internalType": "uint128",
									"name": "newSpotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "newDelta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "outputValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "delta",
									"type": "uint128"
								}
							],
							"name": "validateDelta",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "newSpotPrice",
									"type": "uint128"
								}
							],
							"name": "validateSpotPrice",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getBuyInfo(uint128,uint128,uint256,uint256,uint256)": {
								"params": {
									"delta": "The delta parameter of the pair, what it means depends on the curve",
									"feeMultiplier": "Determines how much fee the LP takes from this trade, 18 decimals",
									"numItems": "The number of NFTs the user is buying from the pair",
									"protocolFeeMultiplier": "Determines how much fee the protocol takes from this trade, 18 decimals",
									"spotPrice": "The current selling spot price of the pair, in tokens"
								},
								"returns": {
									"error": "Any math calculation errors, only Error.OK means the returned values are valid",
									"inputValue": "The amount that the user should pay, in tokens",
									"newDelta": "The updated delta, used to parameterize the bonding curve",
									"newSpotPrice": "The updated selling spot price, in tokens",
									"protocolFee": "The amount of fee to send to the protocol, in tokens"
								}
							},
							"getSellInfo(uint128,uint128,uint256,uint256,uint256)": {
								"params": {
									"delta": "The delta parameter of the pair, what it means depends on the curve",
									"feeMultiplier": "Determines how much fee the LP takes from this trade, 18 decimals",
									"numItems": "The number of NFTs the user is selling to the pair",
									"protocolFeeMultiplier": "Determines how much fee the protocol takes from this trade, 18 decimals",
									"spotPrice": "The current selling spot price of the pair, in tokens"
								},
								"returns": {
									"error": "Any math calculation errors, only Error.OK means the returned values are valid",
									"newDelta": "The updated delta, used to parameterize the bonding curve",
									"newSpotPrice": "The updated selling spot price, in tokens",
									"outputValue": "The amount that the user should receive, in tokens",
									"protocolFee": "The amount of fee to send to the protocol, in tokens"
								}
							},
							"validateDelta(uint128)": {
								"params": {
									"delta": "The delta value to be validated"
								},
								"returns": {
									"valid": "True if delta is valid, false otherwise"
								}
							},
							"validateSpotPrice(uint128)": {
								"params": {
									"newSpotPrice": "The new spot price to be set"
								},
								"returns": {
									"valid": "True if the new spot price is valid, false otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getBuyInfo(uint128,uint128,uint256,uint256,uint256)": "7ca542ac",
							"getSellInfo(uint128,uint128,uint256,uint256,uint256)": "097cc63d",
							"validateDelta(uint128)": "0ae67ccc",
							"validateSpotPrice(uint128)": "a1bbb2e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"numItems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeeMultiplier\",\"type\":\"uint256\"}],\"name\":\"getBuyInfo\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"inputValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"numItems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeeMultiplier\",\"type\":\"uint256\"}],\"name\":\"getSellInfo\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"outputValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"}],\"name\":\"validateDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"}],\"name\":\"validateSpotPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getBuyInfo(uint128,uint128,uint256,uint256,uint256)\":{\"params\":{\"delta\":\"The delta parameter of the pair, what it means depends on the curve\",\"feeMultiplier\":\"Determines how much fee the LP takes from this trade, 18 decimals\",\"numItems\":\"The number of NFTs the user is buying from the pair\",\"protocolFeeMultiplier\":\"Determines how much fee the protocol takes from this trade, 18 decimals\",\"spotPrice\":\"The current selling spot price of the pair, in tokens\"},\"returns\":{\"error\":\"Any math calculation errors, only Error.OK means the returned values are valid\",\"inputValue\":\"The amount that the user should pay, in tokens\",\"newDelta\":\"The updated delta, used to parameterize the bonding curve\",\"newSpotPrice\":\"The updated selling spot price, in tokens\",\"protocolFee\":\"The amount of fee to send to the protocol, in tokens\"}},\"getSellInfo(uint128,uint128,uint256,uint256,uint256)\":{\"params\":{\"delta\":\"The delta parameter of the pair, what it means depends on the curve\",\"feeMultiplier\":\"Determines how much fee the LP takes from this trade, 18 decimals\",\"numItems\":\"The number of NFTs the user is selling to the pair\",\"protocolFeeMultiplier\":\"Determines how much fee the protocol takes from this trade, 18 decimals\",\"spotPrice\":\"The current selling spot price of the pair, in tokens\"},\"returns\":{\"error\":\"Any math calculation errors, only Error.OK means the returned values are valid\",\"newDelta\":\"The updated delta, used to parameterize the bonding curve\",\"newSpotPrice\":\"The updated selling spot price, in tokens\",\"outputValue\":\"The amount that the user should receive, in tokens\",\"protocolFee\":\"The amount of fee to send to the protocol, in tokens\"}},\"validateDelta(uint128)\":{\"params\":{\"delta\":\"The delta value to be validated\"},\"returns\":{\"valid\":\"True if delta is valid, false otherwise\"}},\"validateSpotPrice(uint128)\":{\"params\":{\"newSpotPrice\":\"The new spot price to be set\"},\"returns\":{\"valid\":\"True if the new spot price is valid, false otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBuyInfo(uint128,uint128,uint256,uint256,uint256)\":{\"notice\":\"Given the current state of the pair and the trade, computes how much the user should pay to purchase an NFT from the pair, the new spot price, and other values.\"},\"getSellInfo(uint128,uint128,uint256,uint256,uint256)\":{\"notice\":\"Given the current state of the pair and the trade, computes how much the user should receive when selling NFTs to the pair, the new spot price, and other values.\"},\"validateDelta(uint128)\":{\"notice\":\"Validates if a delta value is valid for the curve. The criteria for validity can be different for each type of curve, for instance ExponentialCurve requires delta to be greater than 1.\"},\"validateSpotPrice(uint128)\":{\"notice\":\"Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bonding-curves/ICurve.sol\":\"ICurve\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/bonding-curves/CurveErrorCodes.sol\":{\"keccak256\":\"0x921fa756278ee39ea5e10c85933f1775ff4a412b700961837097b5da72e2c2ca\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8bc64cbcac649bcc4ea42df0c913dde0c7cb90cb2e724b8ed12e4d3f37e5436c\",\"dweb:/ipfs/Qmcyh8k4pbcDB9qSPMppbAYDYgbweH4sy4AaAEjFHYHBcZ\"]},\"src/bonding-curves/ICurve.sol\":{\"keccak256\":\"0xc845d2cb70966da8b2bd6f5d51abbfd459ae9c3f27449b8243aa5182bc174d24\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3338d5eea46a635ead3c390632dc4eaa0de0a870c784902c27c3c88359fce0d2\",\"dweb:/ipfs/QmWmELkig6wiKxEzuNRmf2PFjJbBJFnePSASh2DKBnCWfX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getBuyInfo(uint128,uint128,uint256,uint256,uint256)": {
								"notice": "Given the current state of the pair and the trade, computes how much the user should pay to purchase an NFT from the pair, the new spot price, and other values."
							},
							"getSellInfo(uint128,uint128,uint256,uint256,uint256)": {
								"notice": "Given the current state of the pair and the trade, computes how much the user should receive when selling NFTs to the pair, the new spot price, and other values."
							},
							"validateDelta(uint128)": {
								"notice": "Validates if a delta value is valid for the curve. The criteria for validity can be different for each type of curve, for instance ExponentialCurve requires delta to be greater than 1."
							},
							"validateSpotPrice(uint128)": {
								"notice": "Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token."
							}
						},
						"version": 1
					}
				}
			},
			"src/bonding-curves/LinearCurve.sol": {
				"LinearCurve": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "spotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "delta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "numItems",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeMultiplier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFeeMultiplier",
									"type": "uint256"
								}
							],
							"name": "getBuyInfo",
							"outputs": [
								{
									"internalType": "enum CurveErrorCodes.Error",
									"name": "error",
									"type": "uint8"
								},
								{
									"internalType": "uint128",
									"name": "newSpotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "newDelta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "inputValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFee",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "spotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "delta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "numItems",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeMultiplier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFeeMultiplier",
									"type": "uint256"
								}
							],
							"name": "getSellInfo",
							"outputs": [
								{
									"internalType": "enum CurveErrorCodes.Error",
									"name": "error",
									"type": "uint8"
								},
								{
									"internalType": "uint128",
									"name": "newSpotPrice",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "newDelta",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "outputValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "protocolFee",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "validateDelta",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"name": "validateSpotPrice",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getBuyInfo(uint128,uint128,uint256,uint256,uint256)": {
								"details": "See {ICurve-getBuyInfo}"
							},
							"getSellInfo(uint128,uint128,uint256,uint256,uint256)": {
								"details": "See {ICurve-getSellInfo}"
							},
							"validateDelta(uint128)": {
								"details": "See {ICurve-validateDelta}"
							},
							"validateSpotPrice(uint128)": {
								"details": "See {ICurve-validateSpotPrice}"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/bonding-curves/LinearCurve.sol\":401:6389  contract LinearCurve is ICurve, CurveErrorCodes {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/bonding-curves/LinearCurve.sol\":401:6389  contract LinearCurve is ICurve, CurveErrorCodes {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x097cc63d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ae67ccc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7ca542ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa1bbb2e8\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/bonding-curves/LinearCurve.sol\":3765:6387  function getSellInfo(... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/bonding-curves/LinearCurve.sol\":553:742  function validateDelta(... */\n    tag_4:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":731:735  true */\n      0x01\n      swap1\n        /* \"src/bonding-curves/LinearCurve.sol\":553:742  function validateDelta(... */\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":1733:1747   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1726:1748   */\n      iszero\n        /* \"#utility.yul\":1708:1749   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1696:1698   */\n      0x20\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"src/bonding-curves/LinearCurve.sol\":553:742  function validateDelta(... */\n      tag_11\n        /* \"#utility.yul\":1568:1755   */\n      jump\n        /* \"src/bonding-curves/LinearCurve.sol\":1068:3705  function getBuyInfo(... */\n    tag_5:\n      tag_7\n      tag_20\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n        /* \"src/bonding-curves/LinearCurve.sol\":3765:6387  function getSellInfo(... */\n    tag_10:\n        /* \"src/bonding-curves/LinearCurve.sol\":4015:4026  Error error */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":4040:4060  uint128 newSpotPrice */\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":4074:4090  uint128 newDelta */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":4104:4123  uint256 outputValue */\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":4137:4156  uint256 protocolFee */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":4249:4257  numItems */\n      dup8\n        /* \"src/bonding-curves/LinearCurve.sol\":4261:4262  0 */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":4249:4262  numItems == 0 */\n      sub\n        /* \"src/bonding-curves/LinearCurve.sol\":4245:4332  if (numItems == 0) {... */\n      tag_28\n      jumpi\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":4286:4308  Error.INVALID_NUMITEMS */\n      0x01\n      swap4\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":4310:4311  0 */\n      0x00\n      swap3\n      pop\n      dup3\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":4278:4321  return (Error.INVALID_NUMITEMS, 0, 0, 0, 0) */\n      jump(tag_27)\n        /* \"src/bonding-curves/LinearCurve.sol\":4245:4332  if (numItems == 0) {... */\n    tag_28:\n        /* \"src/bonding-curves/LinearCurve.sol\":4428:4454  uint256 totalPriceDecrease */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":4457:4473  delta * numItems */\n      tag_29\n        /* \"src/bonding-curves/LinearCurve.sol\":4465:4473  numItems */\n      dup10\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":4457:4473  delta * numItems */\n      dup13\n      and\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"src/bonding-curves/LinearCurve.sol\":4428:4473  uint256 totalPriceDecrease = delta * numItems */\n      swap1\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":4607:4625  totalPriceDecrease */\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":4595:4604  spotPrice */\n      dup12\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":4595:4625  spotPrice < totalPriceDecrease */\n      and\n      lt\n        /* \"src/bonding-curves/LinearCurve.sol\":4591:5430  if (spotPrice < totalPriceDecrease) {... */\n      iszero\n      tag_31\n      jumpi\n        /* \"src/bonding-curves/LinearCurve.sol\":4742:4743  0 */\n      0x00\n      swap5\n      pop\n      dup5\n        /* \"src/bonding-curves/LinearCurve.sol\":4911:4928  spotPrice / delta */\n      tag_32\n        /* \"src/bonding-curves/LinearCurve.sol\":4923:4928  delta */\n      dup12\n        /* \"src/bonding-curves/LinearCurve.sol\":4911:4920  spotPrice */\n      dup14\n        /* \"src/bonding-curves/LinearCurve.sol\":4911:4928  spotPrice / delta */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"src/bonding-curves/LinearCurve.sol\":4911:4932  spotPrice / delta + 1 */\n      tag_34\n      swap1\n        /* \"src/bonding-curves/LinearCurve.sol\":4931:4932  1 */\n      0x01\n        /* \"src/bonding-curves/LinearCurve.sol\":4911:4932  spotPrice / delta + 1 */\n      tag_35\n      jump\t// in\n    tag_34:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":4879:4932  uint256 numItemsTillZeroPrice = spotPrice / delta + 1 */\n      and\n      swap10\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":4591:5430  if (spotPrice < totalPriceDecrease) {... */\n      tag_36\n      swap1\n      pop\n      jump\n    tag_31:\n        /* \"src/bonding-curves/LinearCurve.sol\":5380:5419  spotPrice - uint128(totalPriceDecrease) */\n      tag_37\n        /* \"src/bonding-curves/LinearCurve.sol\":5400:5418  totalPriceDecrease */\n      dup2\n        /* \"src/bonding-curves/LinearCurve.sol\":5380:5389  spotPrice */\n      dup13\n        /* \"src/bonding-curves/LinearCurve.sol\":5380:5419  spotPrice - uint128(totalPriceDecrease) */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"src/bonding-curves/LinearCurve.sol\":5365:5419  newSpotPrice = spotPrice - uint128(totalPriceDecrease) */\n      swap5\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":4591:5430  if (spotPrice < totalPriceDecrease) {... */\n    tag_36:\n        /* \"src/bonding-curves/LinearCurve.sol\":5799:5800  2 */\n      0x02\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":5750:5783  numItems * (numItems - 1) * delta */\n      dup12\n      and\n        /* \"src/bonding-curves/LinearCurve.sol\":5762:5774  numItems - 1 */\n      tag_39\n        /* \"src/bonding-curves/LinearCurve.sol\":5773:5774  1 */\n      0x01\n        /* \"src/bonding-curves/LinearCurve.sol\":5762:5770  numItems */\n      dup13\n        /* \"src/bonding-curves/LinearCurve.sol\":5762:5774  numItems - 1 */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"src/bonding-curves/LinearCurve.sol\":5750:5775  numItems * (numItems - 1) */\n      tag_41\n      swap1\n        /* \"src/bonding-curves/LinearCurve.sol\":5750:5758  numItems */\n      dup13\n        /* \"src/bonding-curves/LinearCurve.sol\":5750:5775  numItems * (numItems - 1) */\n      tag_30\n      jump\t// in\n    tag_41:\n        /* \"src/bonding-curves/LinearCurve.sol\":5750:5783  numItems * (numItems - 1) * delta */\n      tag_42\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_42:\n        /* \"src/bonding-curves/LinearCurve.sol\":5749:5800  (numItems * (numItems - 1) * delta) /... */\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"src/bonding-curves/LinearCurve.sol\":5702:5734  numItems *... */\n      tag_45\n      sub(shl(0x80, 0x01), 0x01)\n      dup14\n      and\n        /* \"src/bonding-curves/LinearCurve.sol\":5702:5710  numItems */\n      dup12\n        /* \"src/bonding-curves/LinearCurve.sol\":5702:5734  numItems *... */\n      tag_30\n      jump\t// in\n    tag_45:\n        /* \"src/bonding-curves/LinearCurve.sol\":5702:5800  numItems *... */\n      tag_46\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_46:\n        /* \"src/bonding-curves/LinearCurve.sol\":5676:5800  outputValue =... */\n      swap3\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":5903:5999  outputValue.fmul(... */\n      tag_47\n        /* \"src/bonding-curves/LinearCurve.sol\":5676:5800  outputValue =... */\n      dup4\n        /* \"src/bonding-curves/LinearCurve.sol\":5933:5954  protocolFeeMultiplier */\n      dup9\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":636:640  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/bonding-curves/LinearCurve.sol\":5903:5919  outputValue.fmul */\n      tag_48\n        /* \"src/bonding-curves/LinearCurve.sol\":5903:5999  outputValue.fmul(... */\n      jump\t// in\n    tag_47:\n        /* \"src/bonding-curves/LinearCurve.sol\":5889:5999  protocolFee = outputValue.fmul(... */\n      swap2\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":6084:6138  outputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      tag_49\n        /* \"src/bonding-curves/LinearCurve.sol\":6084:6095  outputValue */\n      dup4\n        /* \"src/bonding-curves/LinearCurve.sol\":6101:6114  feeMultiplier */\n      dup10\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":636:640  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/bonding-curves/LinearCurve.sol\":6084:6100  outputValue.fmul */\n      tag_48\n        /* \"src/bonding-curves/LinearCurve.sol\":6084:6138  outputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      jump\t// in\n    tag_49:\n        /* \"src/bonding-curves/LinearCurve.sol\":6069:6138  outputValue -= outputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      tag_50\n      swap1\n      dup5\n      tag_40\n      jump\t// in\n    tag_50:\n      swap3\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":6223:6249  outputValue -= protocolFee */\n      tag_51\n        /* \"src/bonding-curves/LinearCurve.sol\":6238:6249  protocolFee */\n      dup3\n        /* \"src/bonding-curves/LinearCurve.sol\":6069:6138  outputValue -= outputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      dup5\n        /* \"src/bonding-curves/LinearCurve.sol\":6223:6249  outputValue -= protocolFee */\n      tag_40\n      jump\t// in\n    tag_51:\n      swap3\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":6302:6307  delta */\n      dup10\n        /* \"src/bonding-curves/LinearCurve.sol\":6291:6307  newDelta = delta */\n      swap4\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":6372:6380  Error.OK */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":6364:6380  error = Error.OK */\n      swap6\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":4171:6387  {... */\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":3765:6387  function getSellInfo(... */\n    tag_27:\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      swap1\n      pop\n      jump\t// out\n        /* \"src/bonding-curves/LinearCurve.sol\":1068:3705  function getBuyInfo(... */\n    tag_21:\n        /* \"src/bonding-curves/LinearCurve.sol\":1317:1328  Error error */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":1342:1362  uint128 newSpotPrice */\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":1376:1392  uint128 newDelta */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":1406:1424  uint256 inputValue */\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":1438:1457  uint256 protocolFee */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":1549:1557  numItems */\n      dup8\n        /* \"src/bonding-curves/LinearCurve.sol\":1561:1562  0 */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":1549:1562  numItems == 0 */\n      sub\n        /* \"src/bonding-curves/LinearCurve.sol\":1545:1632  if (numItems == 0) {... */\n      tag_54\n      jumpi\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":1586:1608  Error.INVALID_NUMITEMS */\n      0x01\n      swap4\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":1610:1611  0 */\n      0x00\n      swap3\n      pop\n      dup3\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":1578:1621  return (Error.INVALID_NUMITEMS, 0, 0, 0, 0) */\n      jump(tag_27)\n        /* \"src/bonding-curves/LinearCurve.sol\":1545:1632  if (numItems == 0) {... */\n    tag_54:\n        /* \"src/bonding-curves/LinearCurve.sol\":1728:1749  uint256 newSpotPrice_ */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":1764:1780  delta * numItems */\n      tag_55\n        /* \"src/bonding-curves/LinearCurve.sol\":1772:1780  numItems */\n      dup10\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":1764:1780  delta * numItems */\n      dup13\n      and\n      tag_30\n      jump\t// in\n    tag_55:\n        /* \"src/bonding-curves/LinearCurve.sol\":1752:1780  spotPrice + delta * numItems */\n      tag_56\n      swap1\n      sub(shl(0x80, 0x01), 0x01)\n      dup14\n      and\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"src/bonding-curves/LinearCurve.sol\":1728:1780  uint256 newSpotPrice_ = spotPrice + delta * numItems */\n      swap1\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":1794:1827  newSpotPrice_ > type(uint128).max */\n      dup2\n      gt\n        /* \"src/bonding-curves/LinearCurve.sol\":1790:1900  if (newSpotPrice_ > type(uint128).max) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"src/bonding-curves/LinearCurve.sol\":1851:1876  Error.SPOT_PRICE_OVERFLOW */\n      0x02\n        /* \"src/bonding-curves/LinearCurve.sol\":1878:1879  0 */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":1881:1882  0 */\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":1884:1885  0 */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":1887:1888  0 */\n      dup1\n        /* \"src/bonding-curves/LinearCurve.sol\":1843:1889  return (Error.SPOT_PRICE_OVERFLOW, 0, 0, 0, 0) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      jump(tag_27)\n        /* \"src/bonding-curves/LinearCurve.sol\":1790:1900  if (newSpotPrice_ > type(uint128).max) {... */\n    tag_58:\n        /* \"src/bonding-curves/LinearCurve.sol\":1932:1945  newSpotPrice_ */\n      swap4\n      pop\n      dup4\n        /* \"src/bonding-curves/LinearCurve.sol\":2583:2603  uint256 buySpotPrice */\n      0x00\n        /* \"src/bonding-curves/LinearCurve.sol\":2606:2623  spotPrice + delta */\n      tag_59\n        /* \"src/bonding-curves/LinearCurve.sol\":2618:2623  delta */\n      dup12\n        /* \"src/bonding-curves/LinearCurve.sol\":2606:2615  spotPrice */\n      dup14\n        /* \"src/bonding-curves/LinearCurve.sol\":2606:2623  spotPrice + delta */\n      tag_35\n      jump\t// in\n    tag_59:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":2583:2623  uint256 buySpotPrice = spotPrice + delta */\n      and\n      swap1\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":3119:3120  2 */\n      0x02\n        /* \"src/bonding-curves/LinearCurve.sol\":3098:3103  delta */\n      dup12\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"src/bonding-curves/LinearCurve.sol\":3070:3103  numItems * (numItems - 1) * delta */\n      and\n        /* \"src/bonding-curves/LinearCurve.sol\":3093:3094  1 */\n      0x01\n        /* \"src/bonding-curves/LinearCurve.sol\":3082:3090  numItems */\n      dup13\n        /* \"src/bonding-curves/LinearCurve.sol\":3082:3094  numItems - 1 */\n      tag_60\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_60:\n        /* \"src/bonding-curves/LinearCurve.sol\":3070:3095  numItems * (numItems - 1) */\n      tag_61\n      swap1\n        /* \"src/bonding-curves/LinearCurve.sol\":3070:3078  numItems */\n      dup14\n        /* \"src/bonding-curves/LinearCurve.sol\":3070:3095  numItems * (numItems - 1) */\n      tag_30\n      jump\t// in\n    tag_61:\n        /* \"src/bonding-curves/LinearCurve.sol\":3070:3103  numItems * (numItems - 1) * delta */\n      tag_62\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_62:\n        /* \"src/bonding-curves/LinearCurve.sol\":3069:3120  (numItems * (numItems - 1) * delta) /... */\n      tag_63\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_63:\n        /* \"src/bonding-curves/LinearCurve.sol\":3019:3054  numItems *... */\n      tag_64\n        /* \"src/bonding-curves/LinearCurve.sol\":3042:3054  buySpotPrice */\n      dup3\n        /* \"src/bonding-curves/LinearCurve.sol\":3019:3027  numItems */\n      dup13\n        /* \"src/bonding-curves/LinearCurve.sol\":3019:3054  numItems *... */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"src/bonding-curves/LinearCurve.sol\":3019:3120  numItems *... */\n      tag_65\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_65:\n        /* \"src/bonding-curves/LinearCurve.sol\":2994:3120  inputValue =... */\n      swap4\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":3222:3317  inputValue.fmul(... */\n      tag_66\n        /* \"src/bonding-curves/LinearCurve.sol\":2994:3120  inputValue =... */\n      dup5\n        /* \"src/bonding-curves/LinearCurve.sol\":3251:3272  protocolFeeMultiplier */\n      dup10\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":636:640  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/bonding-curves/LinearCurve.sol\":3222:3237  inputValue.fmul */\n      tag_48\n        /* \"src/bonding-curves/LinearCurve.sol\":3222:3317  inputValue.fmul(... */\n      jump\t// in\n    tag_66:\n        /* \"src/bonding-curves/LinearCurve.sol\":3208:3317  protocolFee = inputValue.fmul(... */\n      swap3\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":3401:3454  inputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      tag_67\n        /* \"src/bonding-curves/LinearCurve.sol\":3401:3411  inputValue */\n      dup5\n        /* \"src/bonding-curves/LinearCurve.sol\":3417:3430  feeMultiplier */\n      dup11\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":636:640  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/bonding-curves/LinearCurve.sol\":3401:3416  inputValue.fmul */\n      tag_48\n        /* \"src/bonding-curves/LinearCurve.sol\":3401:3454  inputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      jump\t// in\n    tag_67:\n        /* \"src/bonding-curves/LinearCurve.sol\":3387:3454  inputValue += inputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      tag_68\n      swap1\n      dup6\n      tag_57\n      jump\t// in\n    tag_68:\n      swap4\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":3526:3551  inputValue += protocolFee */\n      tag_69\n        /* \"src/bonding-curves/LinearCurve.sol\":3540:3551  protocolFee */\n      dup4\n        /* \"src/bonding-curves/LinearCurve.sol\":3387:3454  inputValue += inputValue.fmul(feeMultiplier, FixedPointMathLib.WAD) */\n      dup6\n        /* \"src/bonding-curves/LinearCurve.sol\":3526:3551  inputValue += protocolFee */\n      tag_57\n      jump\t// in\n    tag_69:\n        /* \"src/bonding-curves/LinearCurve.sol\":3690:3698  Error.OK */\n      0x00\n      swap14\n        /* \"src/bonding-curves/LinearCurve.sol\":1068:3705  function getBuyInfo(... */\n      swap7\n      swap13\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":3526:3551  inputValue += protocolFee */\n      swap10\n      pop\n        /* \"src/bonding-curves/LinearCurve.sol\":1068:3705  function getBuyInfo(... */\n      swap2\n      swap8\n      pop\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":919:1421  function fmul(... */\n    tag_48:\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1116:1125  mul(x, y) */\n      dup3\n      dup3\n      mul\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1217:1226  iszero(x) */\n      dup4\n      iszero\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1231:1240  div(z, x) */\n      dup5\n      dup3\n      div\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1228:1244  eq(div(z, x), y) */\n      dup5\n      eq\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1214:1245  or(iszero(x), eq(div(z, x), y)) */\n      or\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1204:1291  if iszero(or(iszero(x), eq(div(z, x), y))) {... */\n      tag_72\n      jumpi\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1275:1276  0 */\n      0x00\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1272:1273  0 */\n      dup1\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1265:1277  revert(0, 0) */\n      revert\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1204:1291  if iszero(or(iszero(x), eq(div(z, x), y))) {... */\n    tag_72:\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1389:1405  div(z, baseUnit) */\n      div\n      swap3\n        /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":919:1421  function fmul(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:202   */\n    tag_73:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":131:177   */\n      dup2\n      and\n        /* \"#utility.yul\":121:178   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:196   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":192:193   */\n      0x00\n        /* \"#utility.yul\":189:190   */\n      dup1\n        /* \"#utility.yul\":182:194   */\n      revert\n        /* \"#utility.yul\":111:196   */\n    tag_78:\n        /* \"#utility.yul\":14:202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":207:673   */\n    tag_9:\n        /* \"#utility.yul\":302:308   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup1\n        /* \"#utility.yul\":318:324   */\n      0x00\n        /* \"#utility.yul\":326:332   */\n      dup1\n        /* \"#utility.yul\":334:340   */\n      0x00\n        /* \"#utility.yul\":387:390   */\n      0xa0\n        /* \"#utility.yul\":375:384   */\n      dup7\n        /* \"#utility.yul\":366:373   */\n      dup9\n        /* \"#utility.yul\":362:385   */\n      sub\n        /* \"#utility.yul\":358:391   */\n      slt\n        /* \"#utility.yul\":355:408   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":404:405   */\n      0x00\n        /* \"#utility.yul\":401:402   */\n      dup1\n        /* \"#utility.yul\":394:406   */\n      revert\n        /* \"#utility.yul\":355:408   */\n    tag_80:\n        /* \"#utility.yul\":427:456   */\n      tag_81\n        /* \"#utility.yul\":446:455   */\n      dup7\n        /* \"#utility.yul\":427:456   */\n      tag_73\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":417:456   */\n      swap5\n      pop\n        /* \"#utility.yul\":475:513   */\n      tag_82\n        /* \"#utility.yul\":509:511   */\n      0x20\n        /* \"#utility.yul\":498:507   */\n      dup8\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"#utility.yul\":475:513   */\n      tag_73\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":207:673   */\n      swap5\n      swap8\n        /* \"#utility.yul\":465:513   */\n      swap5\n      swap7\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":560:562   */\n      0x40\n        /* \"#utility.yul\":545:563   */\n      dup4\n      add\n        /* \"#utility.yul\":532:564   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":611:613   */\n      0x60\n        /* \"#utility.yul\":596:614   */\n      dup2\n      add\n        /* \"#utility.yul\":583:615   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":662:665   */\n      0x80\n        /* \"#utility.yul\":647:666   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":634:667   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":207:673   */\n      jump\t// out\n        /* \"#utility.yul\":678:1372   */\n    tag_12:\n        /* \"#utility.yul\":931:934   */\n      0xa0\n        /* \"#utility.yul\":916:935   */\n      dup2\n      add\n        /* \"#utility.yul\":965:966   */\n      0x03\n        /* \"#utility.yul\":954:967   */\n      dup8\n      lt\n        /* \"#utility.yul\":944:1088   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1010:1020   */\n      0x4e487b71\n        /* \"#utility.yul\":1005:1008   */\n      0xe0\n        /* \"#utility.yul\":1001:1021   */\n      shl\n        /* \"#utility.yul\":998:999   */\n      0x00\n        /* \"#utility.yul\":991:1022   */\n      mstore\n        /* \"#utility.yul\":1045:1049   */\n      0x21\n        /* \"#utility.yul\":1042:1043   */\n      0x04\n        /* \"#utility.yul\":1035:1050   */\n      mstore\n        /* \"#utility.yul\":1073:1077   */\n      0x24\n        /* \"#utility.yul\":1070:1071   */\n      0x00\n        /* \"#utility.yul\":1063:1078   */\n      revert\n        /* \"#utility.yul\":944:1088   */\n    tag_84:\n        /* \"#utility.yul\":1097:1122   */\n      swap6\n      dup2\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":1211:1226   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":1206:1208   */\n      0x20\n        /* \"#utility.yul\":1191:1209   */\n      dup3\n      add\n        /* \"#utility.yul\":1184:1227   */\n      mstore\n        /* \"#utility.yul\":1263:1278   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":1258:1260   */\n      0x40\n        /* \"#utility.yul\":1243:1261   */\n      dup4\n      add\n        /* \"#utility.yul\":1236:1279   */\n      mstore\n        /* \"#utility.yul\":1310:1312   */\n      0x60\n        /* \"#utility.yul\":1295:1313   */\n      dup3\n      add\n        /* \"#utility.yul\":1288:1322   */\n      mstore\n        /* \"#utility.yul\":1353:1356   */\n      0x80\n        /* \"#utility.yul\":1338:1357   */\n      add\n        /* \"#utility.yul\":1331:1366   */\n      mstore\n        /* \"#utility.yul\":678:1372   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1377:1563   */\n    tag_15:\n        /* \"#utility.yul\":1436:1442   */\n      0x00\n        /* \"#utility.yul\":1489:1491   */\n      0x20\n        /* \"#utility.yul\":1477:1486   */\n      dup3\n        /* \"#utility.yul\":1468:1475   */\n      dup5\n        /* \"#utility.yul\":1464:1487   */\n      sub\n        /* \"#utility.yul\":1460:1492   */\n      slt\n        /* \"#utility.yul\":1457:1509   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1505:1506   */\n      0x00\n        /* \"#utility.yul\":1502:1503   */\n      dup1\n        /* \"#utility.yul\":1495:1507   */\n      revert\n        /* \"#utility.yul\":1457:1509   */\n    tag_86:\n        /* \"#utility.yul\":1528:1557   */\n      tag_87\n        /* \"#utility.yul\":1547:1556   */\n      dup3\n        /* \"#utility.yul\":1528:1557   */\n      tag_73\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1518:1557   */\n      swap4\n        /* \"#utility.yul\":1377:1563   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1760:1887   */\n    tag_74:\n        /* \"#utility.yul\":1821:1831   */\n      0x4e487b71\n        /* \"#utility.yul\":1816:1819   */\n      0xe0\n        /* \"#utility.yul\":1812:1832   */\n      shl\n        /* \"#utility.yul\":1809:1810   */\n      0x00\n        /* \"#utility.yul\":1802:1833   */\n      mstore\n        /* \"#utility.yul\":1852:1856   */\n      0x11\n        /* \"#utility.yul\":1849:1850   */\n      0x04\n        /* \"#utility.yul\":1842:1857   */\n      mstore\n        /* \"#utility.yul\":1876:1880   */\n      0x24\n        /* \"#utility.yul\":1873:1874   */\n      0x00\n        /* \"#utility.yul\":1866:1881   */\n      revert\n        /* \"#utility.yul\":1892:2060   */\n    tag_30:\n        /* \"#utility.yul\":1965:1974   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1996:2005   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2013:2028   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2007:2029   */\n      dup5\n      eq\n        /* \"#utility.yul\":1993:2030   */\n      or\n        /* \"#utility.yul\":1983:2054   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2034:2052   */\n      tag_92\n      tag_74\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1892:2060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2192   */\n    tag_75:\n        /* \"#utility.yul\":2126:2136   */\n      0x4e487b71\n        /* \"#utility.yul\":2121:2124   */\n      0xe0\n        /* \"#utility.yul\":2117:2137   */\n      shl\n        /* \"#utility.yul\":2114:2115   */\n      0x00\n        /* \"#utility.yul\":2107:2138   */\n      mstore\n        /* \"#utility.yul\":2157:2161   */\n      0x12\n        /* \"#utility.yul\":2154:2155   */\n      0x04\n        /* \"#utility.yul\":2147:2162   */\n      mstore\n        /* \"#utility.yul\":2181:2185   */\n      0x24\n        /* \"#utility.yul\":2178:2179   */\n      0x00\n        /* \"#utility.yul\":2171:2186   */\n      revert\n        /* \"#utility.yul\":2197:2413   */\n    tag_33:\n        /* \"#utility.yul\":2237:2238   */\n      0x00\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2324:2326   */\n      dup1\n        /* \"#utility.yul\":2321:2322   */\n      dup5\n        /* \"#utility.yul\":2317:2327   */\n      and\n        /* \"#utility.yul\":2346:2349   */\n      dup1\n        /* \"#utility.yul\":2336:2373   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2353:2371   */\n      tag_96\n      tag_75\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2391:2401   */\n      swap3\n      and\n        /* \"#utility.yul\":2387:2407   */\n      swap2\n      swap1\n      swap2\n      div\n      swap3\n        /* \"#utility.yul\":2197:2413   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2418:2615   */\n    tag_35:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2540:2550   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":2552:2562   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":2536:2563   */\n      add\n      swap1\n        /* \"#utility.yul\":2575:2586   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2572:2609   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":2589:2607   */\n      tag_99\n      tag_74\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2572:2609   */\n      pop\n        /* \"#utility.yul\":2418:2615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2620:2820   */\n    tag_38:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":2756:2766   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":2744:2754   */\n      dup3\n      dup3\n      and\n        /* \"#utility.yul\":2740:2767   */\n      sub\n      swap1\n        /* \"#utility.yul\":2779:2791   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2776:2814   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":2794:2812   */\n      tag_99\n      tag_74\n      jump\t// in\n        /* \"#utility.yul\":2825:2953   */\n    tag_40:\n        /* \"#utility.yul\":2892:2901   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2913:2924   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2910:2947   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2927:2945   */\n      tag_92\n      tag_74\n      jump\t// in\n        /* \"#utility.yul\":2958:3078   */\n    tag_44:\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":3024:3025   */\n      dup3\n        /* \"#utility.yul\":3014:3049   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":3029:3047   */\n      tag_108\n      tag_75\n      jump\t// in\n    tag_108:\n      pop\n        /* \"#utility.yul\":3063:3072   */\n      div\n      swap1\n        /* \"#utility.yul\":2958:3078   */\n      jump\t// out\n        /* \"#utility.yul\":3083:3208   */\n    tag_57:\n        /* \"#utility.yul\":3148:3157   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3169:3179   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3166:3202   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":3182:3200   */\n      tag_92\n      tag_74\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e59035fcea5326de2b6377b4d0a29fedcd102c11bd2808612fe193c1e0a3eb2164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061052b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063097cc63d146100515780630ae67ccc1461007e5780637ca542ac146100a2578063a1bbb2e81461007e575b600080fd5b61006461005f36600461034c565b6100b5565b604051610075959493929190610399565b60405180910390f35b61009261008c3660046103e3565b50600190565b6040519015158152602001610075565b6100646100b036600461034c565b6101e5565b6000806000806000876000036100da57506001935060009250829150819050806101d8565b60006100ef896001600160801b038c1661041b565b9050808b6001600160801b0316101561012e5760009450846101118b8d61044e565b61011c906001610474565b6001600160801b0316995061013b9050565b610138818c61049b565b94505b60026001600160801b038b1661015260018c6104bb565b61015c908c61041b565b610166919061041b565b61017091906104ce565b6101836001600160801b038d168b61041b565b61018d91906104bb565b92506101a28388670de0b6b3a7640000610315565b91506101b78389670de0b6b3a7640000610315565b6101c190846104bb565b92506101cd82846104bb565b925089935060009550505b9550955095509550959050565b60008060008060008760000361020a57506001935060009250829150819050806101d8565b600061021f896001600160801b038c1661041b565b610232906001600160801b038d166104e2565b90506001600160801b0381111561025b57600260008060008095509550955095509550506101d8565b935083600061026a8b8d610474565b6001600160801b0316905060028b6001600160801b031660018c61028e91906104bb565b610298908d61041b565b6102a2919061041b565b6102ac91906104ce565b6102b6828c61041b565b6102c091906104e2565b93506102d58489670de0b6b3a7640000610315565b92506102ea848a670de0b6b3a7640000610315565b6102f490856104e2565b935061030083856104e2565b60009d969c5099509197509395505050505050565b828202831584820484141761032957600080fd5b0492915050565b80356001600160801b038116811461034757600080fd5b919050565b600080600080600060a0868803121561036457600080fd5b61036d86610330565b945061037b60208701610330565b94979496505050506040830135926060810135926080909101359150565b60a08101600387106103bb57634e487b7160e01b600052602160045260246000fd5b9581526001600160801b03948516602082015292909316604083015260608201526080015290565b6000602082840312156103f557600080fd5b6103fe82610330565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761043257610432610405565b92915050565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b038084168061046857610468610438565b92169190910492915050565b6001600160801b0381811683821601908082111561049457610494610405565b5092915050565b6001600160801b0382811682821603908082111561049457610494610405565b8181038181111561043257610432610405565b6000826104dd576104dd610438565b500490565b808201808211156104325761043261040556fea2646970667358221220e59035fcea5326de2b6377b4d0a29fedcd102c11bd2808612fe193c1e0a3eb2164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97CC63D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAE67CCC EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x7CA542AC EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA1BBB2E8 EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x34C JUMP JUMPDEST PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x3E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x34C JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH1 0x0 SUB PUSH2 0xDA JUMPI POP PUSH1 0x1 SWAP4 POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP13 AND PUSH2 0x41B JUMP JUMPDEST SWAP1 POP DUP1 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 SWAP5 POP DUP5 PUSH2 0x111 DUP12 DUP14 PUSH2 0x44E JUMP JUMPDEST PUSH2 0x11C SWAP1 PUSH1 0x1 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP10 POP PUSH2 0x13B SWAP1 POP JUMP JUMPDEST PUSH2 0x138 DUP2 DUP13 PUSH2 0x49B JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND PUSH2 0x152 PUSH1 0x1 DUP13 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x15C SWAP1 DUP13 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x183 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP14 AND DUP12 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP PUSH2 0x1A2 DUP4 DUP9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7 DUP4 DUP10 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x1C1 SWAP1 DUP5 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP PUSH2 0x1CD DUP3 DUP5 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP10 SWAP4 POP PUSH1 0x0 SWAP6 POP POP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH1 0x0 SUB PUSH2 0x20A JUMPI POP PUSH1 0x1 SWAP4 POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP13 AND PUSH2 0x41B JUMP JUMPDEST PUSH2 0x232 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP14 AND PUSH2 0x4E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT ISZERO PUSH2 0x25B JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0x1D8 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x0 PUSH2 0x26A DUP12 DUP14 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH1 0x2 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 DUP13 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x298 SWAP1 DUP14 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x2B6 DUP3 DUP13 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D5 DUP5 DUP10 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST SWAP3 POP PUSH2 0x2EA DUP5 DUP11 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x2F4 SWAP1 DUP6 PUSH2 0x4E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x300 DUP4 DUP6 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 SWAP14 SWAP7 SWAP13 POP SWAP10 POP SWAP2 SWAP8 POP SWAP4 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 MUL DUP4 ISZERO DUP5 DUP3 DIV DUP5 EQ OR PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36D DUP7 PUSH2 0x330 JUMP JUMPDEST SWAP5 POP PUSH2 0x37B PUSH1 0x20 DUP8 ADD PUSH2 0x330 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH1 0x3 DUP8 LT PUSH2 0x3BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FE DUP3 PUSH2 0x330 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x468 JUMPI PUSH2 0x468 PUSH2 0x438 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x405 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x405 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4DD JUMPI PUSH2 0x4DD PUSH2 0x438 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x405 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SWAP1 CALLDATALOAD 0xFC 0xEA MSTORE8 0x26 0xDE 0x2B PUSH4 0x77B4D0A2 SWAP16 0xED 0xCD LT 0x2C GT 0xBD 0x28 ADDMOD PUSH2 0x2FE1 SWAP4 0xC1 0xE0 LOG3 0xEB 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "401:5988:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@fmul_27": {
									"entryPoint": 789,
									"id": 27,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getBuyInfo_532": {
									"entryPoint": 485,
									"id": 532,
									"parameterSlots": 5,
									"returnSlots": 5
								},
								"@getSellInfo_658": {
									"entryPoint": 181,
									"id": 658,
									"parameterSlots": 5,
									"returnSlots": 5
								},
								"@validateDelta_393": {
									"entryPoint": null,
									"id": 393,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@validateSpotPrice_405": {
									"entryPoint": null,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128t_uint128t_uint256t_uint256t_uint256": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint128": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Error_$294_t_uint128_t_uint128_t_uint256_t_uint256__to_t_uint8_t_uint128_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint128": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint128": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3210:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:139:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "180:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "182:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "182:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:34:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:46:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:57:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:65:4"
															},
															"nodeType": "YulIf",
															"src": "111:85:4"
														}
													]
												},
												"name": "abi_decode_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:188:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "345:328:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "392:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "404:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:33:4"
															},
															"nodeType": "YulIf",
															"src": "355:53:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "417:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "446:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "427:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "465:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "498:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "509:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "494:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "494:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "475:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "475:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "522:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "549:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "560:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "532:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "522:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "573:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "611:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "583:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:32:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "624:43:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "651:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "662:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "647:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "647:19:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "634:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:33:4"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_uint128t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "290:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "302:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "310:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "318:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "326:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "334:6:4",
														"type": ""
													}
												],
												"src": "207:466:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:474:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "998:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1005:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1010:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1001:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1001:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "991:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "991:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "991:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1042:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:4:4",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1035:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1035:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1070:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1073:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1063:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1063:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1063:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "965:1:4",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "954:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "954:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "947:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:21:4"
															},
															"nodeType": "YulIf",
															"src": "944:144:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1104:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1115:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1097:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1097:25:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1131:44:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1141:34:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1135:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1195:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1206:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1191:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1223:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1211:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1184:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1184:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1247:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1258:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1243:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1243:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "1267:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1275:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1299:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1310:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1315:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1288:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1353:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:19:4"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1359:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:35:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Error_$294_t_uint128_t_uint128_t_uint256_t_uint256__to_t_uint8_t_uint128_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "835:9:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "846:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "854:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "862:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "878:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "889:4:4",
														"type": ""
													}
												],
												"src": "678:694:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1447:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1493:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1502:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1505:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1495:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1495:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1495:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1468:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1477:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1464:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1464:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1489:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:32:4"
															},
															"nodeType": "YulIf",
															"src": "1457:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1518:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1547:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128",
																	"nodeType": "YulIdentifier",
																	"src": "1528:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1413:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1424:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1436:6:4",
														"type": ""
													}
												],
												"src": "1377:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1663:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1673:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1685:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1673:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1715:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1740:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1733:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1733:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1726:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1726:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1708:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1632:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1643:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1654:4:4",
														"type": ""
													}
												],
												"src": "1568:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1792:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1809:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1816:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1821:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1812:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1812:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1802:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1842:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1873:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1866:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1760:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1944:116:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1954:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1969:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1972:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1965:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1954:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2032:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2034:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2034:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2034:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2003:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1996:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1996:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2010:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2017:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2026:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2013:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2013:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2007:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2007:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1993:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1993:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:45:4"
															},
															"nodeType": "YulIf",
															"src": "1983:71:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1923:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1926:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1932:7:4",
														"type": ""
													}
												],
												"src": "1892:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2097:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2121:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2126:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2117:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2107:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2107:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2157:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2147:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2178:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2181:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2171:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2065:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2243:170:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2253:44:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2263:34:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2257:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2306:21:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2321:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2324:2:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:10:4"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "2310:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2353:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2353:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2353:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "2346:3:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:11:4"
															},
															"nodeType": "YulIf",
															"src": "2336:37:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2382:25:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2395:1:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2398:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:10:4"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "2403:3:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2387:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:20:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2382:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2228:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2231:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2237:1:4",
														"type": ""
													}
												],
												"src": "2197:216:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:149:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2476:44:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2486:34:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2480:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:34:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2544:1:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2547:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:10:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2556:1:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2559:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:10:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:27:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2529:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2587:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2589:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2589:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2589:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2578:3:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2583:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2575:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:11:4"
															},
															"nodeType": "YulIf",
															"src": "2572:37:4"
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2449:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2452:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2458:3:4",
														"type": ""
													}
												],
												"src": "2418:197:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2669:151:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2679:44:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2689:34:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2683:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2732:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2748:1:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2751:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2744:10:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2760:1:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2763:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:10:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2740:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2740:27:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2732:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2794:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2794:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2794:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2782:4:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2788:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2779:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2779:12:4"
															},
															"nodeType": "YulIf",
															"src": "2776:38:4"
														}
													]
												},
												"name": "checked_sub_t_uint128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2651:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2654:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2660:4:4",
														"type": ""
													}
												],
												"src": "2620:200:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2874:79:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2884:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2896:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2899:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2892:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2884:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2925:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2916:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2922:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2913:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:11:4"
															},
															"nodeType": "YulIf",
															"src": "2910:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2856:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2859:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2865:4:4",
														"type": ""
													}
												],
												"src": "2825:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3004:74:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3027:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3029:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3029:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3029:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3024:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3017:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:9:4"
															},
															"nodeType": "YulIf",
															"src": "3014:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3058:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3067:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3070:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3058:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2989:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2992:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2998:1:4",
														"type": ""
													}
												],
												"src": "2958:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3131:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3141:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3152:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3155:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3148:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3141:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3182:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3172:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3175:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:10:4"
															},
															"nodeType": "YulIf",
															"src": "3166:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3114:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3117:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3123:3:4",
														"type": ""
													}
												],
												"src": "3083:125:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint128t_uint128t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n        value1 := abi_decode_uint128(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_enum$_Error_$294_t_uint128_t_uint128_t_uint256_t_uint256__to_t_uint8_t_uint128_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint128(x, y) -> r\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function checked_add_t_uint128(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint128(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        diff := sub(and(x, _1), and(y, _1))\n        if gt(diff, _1) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063097cc63d146100515780630ae67ccc1461007e5780637ca542ac146100a2578063a1bbb2e81461007e575b600080fd5b61006461005f36600461034c565b6100b5565b604051610075959493929190610399565b60405180910390f35b61009261008c3660046103e3565b50600190565b6040519015158152602001610075565b6100646100b036600461034c565b6101e5565b6000806000806000876000036100da57506001935060009250829150819050806101d8565b60006100ef896001600160801b038c1661041b565b9050808b6001600160801b0316101561012e5760009450846101118b8d61044e565b61011c906001610474565b6001600160801b0316995061013b9050565b610138818c61049b565b94505b60026001600160801b038b1661015260018c6104bb565b61015c908c61041b565b610166919061041b565b61017091906104ce565b6101836001600160801b038d168b61041b565b61018d91906104bb565b92506101a28388670de0b6b3a7640000610315565b91506101b78389670de0b6b3a7640000610315565b6101c190846104bb565b92506101cd82846104bb565b925089935060009550505b9550955095509550959050565b60008060008060008760000361020a57506001935060009250829150819050806101d8565b600061021f896001600160801b038c1661041b565b610232906001600160801b038d166104e2565b90506001600160801b0381111561025b57600260008060008095509550955095509550506101d8565b935083600061026a8b8d610474565b6001600160801b0316905060028b6001600160801b031660018c61028e91906104bb565b610298908d61041b565b6102a2919061041b565b6102ac91906104ce565b6102b6828c61041b565b6102c091906104e2565b93506102d58489670de0b6b3a7640000610315565b92506102ea848a670de0b6b3a7640000610315565b6102f490856104e2565b935061030083856104e2565b60009d969c5099509197509395505050505050565b828202831584820484141761032957600080fd5b0492915050565b80356001600160801b038116811461034757600080fd5b919050565b600080600080600060a0868803121561036457600080fd5b61036d86610330565b945061037b60208701610330565b94979496505050506040830135926060810135926080909101359150565b60a08101600387106103bb57634e487b7160e01b600052602160045260246000fd5b9581526001600160801b03948516602082015292909316604083015260608201526080015290565b6000602082840312156103f557600080fd5b6103fe82610330565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761043257610432610405565b92915050565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b038084168061046857610468610438565b92169190910492915050565b6001600160801b0381811683821601908082111561049457610494610405565b5092915050565b6001600160801b0382811682821603908082111561049457610494610405565b8181038181111561043257610432610405565b6000826104dd576104dd610438565b500490565b808201808211156104325761043261040556fea2646970667358221220e59035fcea5326de2b6377b4d0a29fedcd102c11bd2808612fe193c1e0a3eb2164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97CC63D EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAE67CCC EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x7CA542AC EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA1BBB2E8 EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x34C JUMP JUMPDEST PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x92 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x3E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x34C JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH1 0x0 SUB PUSH2 0xDA JUMPI POP PUSH1 0x1 SWAP4 POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP13 AND PUSH2 0x41B JUMP JUMPDEST SWAP1 POP DUP1 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 SWAP5 POP DUP5 PUSH2 0x111 DUP12 DUP14 PUSH2 0x44E JUMP JUMPDEST PUSH2 0x11C SWAP1 PUSH1 0x1 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP10 POP PUSH2 0x13B SWAP1 POP JUMP JUMPDEST PUSH2 0x138 DUP2 DUP13 PUSH2 0x49B JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP12 AND PUSH2 0x152 PUSH1 0x1 DUP13 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x15C SWAP1 DUP13 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x183 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP14 AND DUP12 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP PUSH2 0x1A2 DUP4 DUP9 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7 DUP4 DUP10 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x1C1 SWAP1 DUP5 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP PUSH2 0x1CD DUP3 DUP5 PUSH2 0x4BB JUMP JUMPDEST SWAP3 POP DUP10 SWAP4 POP PUSH1 0x0 SWAP6 POP POP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH1 0x0 SUB PUSH2 0x20A JUMPI POP PUSH1 0x1 SWAP4 POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP13 AND PUSH2 0x41B JUMP JUMPDEST PUSH2 0x232 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP14 AND PUSH2 0x4E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT ISZERO PUSH2 0x25B JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0x1D8 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x0 PUSH2 0x26A DUP12 DUP14 PUSH2 0x474 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH1 0x2 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 DUP13 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x298 SWAP1 DUP14 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x2B6 DUP3 DUP13 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D5 DUP5 DUP10 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST SWAP3 POP PUSH2 0x2EA DUP5 DUP11 PUSH8 0xDE0B6B3A7640000 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x2F4 SWAP1 DUP6 PUSH2 0x4E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x300 DUP4 DUP6 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x0 SWAP14 SWAP7 SWAP13 POP SWAP10 POP SWAP2 SWAP8 POP SWAP4 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 MUL DUP4 ISZERO DUP5 DUP3 DIV DUP5 EQ OR PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36D DUP7 PUSH2 0x330 JUMP JUMPDEST SWAP5 POP PUSH2 0x37B PUSH1 0x20 DUP8 ADD PUSH2 0x330 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH1 0x3 DUP8 LT PUSH2 0x3BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FE DUP3 PUSH2 0x330 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x468 JUMPI PUSH2 0x468 PUSH2 0x438 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x405 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x405 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4DD JUMPI PUSH2 0x4DD PUSH2 0x438 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x432 JUMPI PUSH2 0x432 PUSH2 0x405 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SWAP1 CALLDATALOAD 0xFC 0xEA MSTORE8 0x26 0xDE 0x2B PUSH4 0x77B4D0A2 SWAP16 0xED 0xCD LT 0x2C GT 0xBD 0x28 ADDMOD PUSH2 0x2FE1 SWAP4 0xC1 0xE0 LOG3 0xEB 0x21 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "401:5988:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:2622;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;553:189;;;;;;:::i;:::-;-1:-1:-1;731:4:3;;553:189;;;;1733:14:4;;1726:22;1708:41;;1696:2;1681:18;553:189:3;1568:187:4;1068:2637:3;;;;;;:::i;:::-;;:::i;3765:2622::-;4015:11;4040:20;4074:16;4104:19;4137;4249:8;4261:1;4249:13;4245:87;;-1:-1:-1;4286:22:3;;-1:-1:-1;4310:1:3;;-1:-1:-1;4310:1:3;;-1:-1:-1;4310:1:3;;-1:-1:-1;4310:1:3;4278:43;;4245:87;4428:26;4457:16;4465:8;-1:-1:-1;;;;;4457:16:3;;;:::i;:::-;4428:45;;4607:18;4595:9;-1:-1:-1;;;;;4595:30:3;;4591:839;;;4742:1;;-1:-1:-1;4742:1:3;4911:17;4923:5;4911:9;:17;:::i;:::-;:21;;4931:1;4911:21;:::i;:::-;-1:-1:-1;;;;;4879:53:3;;-1:-1:-1;4591:839:3;;-1:-1:-1;4591:839:3;;5380:39;5400:18;5380:9;:39;:::i;:::-;5365:54;;4591:839;5799:1;-1:-1:-1;;;;;5750:33:3;;5762:12;5773:1;5762:8;:12;:::i;:::-;5750:25;;:8;:25;:::i;:::-;:33;;;;:::i;:::-;5749:51;;;;:::i;:::-;5702:32;-1:-1:-1;;;;;5702:32:3;;:8;:32;:::i;:::-;:98;;;;:::i;:::-;5676:124;-1:-1:-1;5903:96:3;5676:124;5933:21;636:4:0;5903:16:3;:96::i;:::-;5889:110;-1:-1:-1;6084:54:3;:11;6101:13;636:4:0;6084:16:3;:54::i;:::-;6069:69;;;;:::i;:::-;;-1:-1:-1;6223:26:3;6238:11;6069:69;6223:26;:::i;:::-;;;6302:5;6291:16;;6372:8;6364:16;;4171:2216;3765:2622;;;;;;;;;;;;:::o;1068:2637::-;1317:11;1342:20;1376:16;1406:18;1438:19;1549:8;1561:1;1549:13;1545:87;;-1:-1:-1;1586:22:3;;-1:-1:-1;1610:1:3;;-1:-1:-1;1610:1:3;;-1:-1:-1;1610:1:3;;-1:-1:-1;1610:1:3;1578:43;;1545:87;1728:21;1764:16;1772:8;-1:-1:-1;;;;;1764:16:3;;;:::i;:::-;1752:28;;-1:-1:-1;;;;;1752:28:3;;;:::i;:::-;1728:52;-1:-1:-1;;;;;;1794:33:3;;1790:110;;;1851:25;1878:1;1881;1884;1887;1843:46;;;;;;;;;;;;;1790:110;1932:13;-1:-1:-1;1932:13:3;2583:20;2606:17;2618:5;2606:9;:17;:::i;:::-;-1:-1:-1;;;;;2583:40:3;;;3119:1;3098:5;-1:-1:-1;;;;;3070:33:3;3093:1;3082:8;:12;;;;:::i;:::-;3070:25;;:8;:25;:::i;:::-;:33;;;;:::i;:::-;3069:51;;;;:::i;:::-;3019:35;3042:12;3019:8;:35;:::i;:::-;:101;;;;:::i;:::-;2994:126;-1:-1:-1;3222:95:3;2994:126;3251:21;636:4:0;3222:15:3;:95::i;:::-;3208:109;-1:-1:-1;3401:53:3;:10;3417:13;636:4:0;3401:15:3;:53::i;:::-;3387:67;;;;:::i;:::-;;-1:-1:-1;3526:25:3;3540:11;3387:67;3526:25;:::i;:::-;3690:8;;1068:2637;;-1:-1:-1;3526:25:3;-1:-1:-1;1068:2637:3;;-1:-1:-1;1068:2637:3;;-1:-1:-1;;;;;;1068:2637:3:o;919:502:0:-;1116:9;;;1217;;1231;;;1228:16;;1214:31;1204:87;;1275:1;1272;1265:12;1204:87;1389:16;;919:502;-1:-1:-1;;919:502:0:o;14:188:4:-;82:20;;-1:-1:-1;;;;;131:46:4;;121:57;;111:85;;192:1;189;182:12;111:85;14:188;;;:::o;207:466::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:29;446:9;427:29;:::i;:::-;417:39;;475:38;509:2;498:9;494:18;475:38;:::i;:::-;207:466;;465:48;;-1:-1:-1;;;;560:2:4;545:18;;532:32;;611:2;596:18;;583:32;;662:3;647:19;;;634:33;;-1:-1:-1;207:466:4:o;678:694::-;931:3;916:19;;965:1;954:13;;944:144;;1010:10;1005:3;1001:20;998:1;991:31;1045:4;1042:1;1035:15;1073:4;1070:1;1063:15;944:144;1097:25;;;-1:-1:-1;;;;;1211:15:4;;;1206:2;1191:18;;1184:43;1263:15;;;;1258:2;1243:18;;1236:43;1310:2;1295:18;;1288:34;1353:3;1338:19;1331:35;678:694;:::o;1377:186::-;1436:6;1489:2;1477:9;1468:7;1464:23;1460:32;1457:52;;;1505:1;1502;1495:12;1457:52;1528:29;1547:9;1528:29;:::i;:::-;1518:39;1377:186;-1:-1:-1;;;1377:186:4:o;1760:127::-;1821:10;1816:3;1812:20;1809:1;1802:31;1852:4;1849:1;1842:15;1876:4;1873:1;1866:15;1892:168;1965:9;;;1996;;2013:15;;;2007:22;;1993:37;1983:71;;2034:18;;:::i;:::-;1892:168;;;;:::o;2065:127::-;2126:10;2121:3;2117:20;2114:1;2107:31;2157:4;2154:1;2147:15;2181:4;2178:1;2171:15;2197:216;2237:1;-1:-1:-1;;;;;2324:2:4;2321:1;2317:10;2346:3;2336:37;;2353:18;;:::i;:::-;2391:10;;2387:20;;;;;2197:216;-1:-1:-1;;2197:216:4:o;2418:197::-;-1:-1:-1;;;;;2540:10:4;;;2552;;;2536:27;;2575:11;;;2572:37;;;2589:18;;:::i;:::-;2572:37;2418:197;;;;:::o;2620:200::-;-1:-1:-1;;;;;2756:10:4;;;2744;;;2740:27;;2779:12;;;2776:38;;;2794:18;;:::i;2825:128::-;2892:9;;;2913:11;;;2910:37;;;2927:18;;:::i;2958:120::-;2998:1;3024;3014:35;;3029:18;;:::i;:::-;-1:-1:-1;3063:9:4;;2958:120::o;3083:125::-;3148:9;;;3169:10;;;3166:36;;;3182:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "264600",
								"executionCost": "306",
								"totalCost": "264906"
							},
							"external": {
								"getBuyInfo(uint128,uint128,uint256,uint256,uint256)": "infinite",
								"getSellInfo(uint128,uint128,uint256,uint256,uint256)": "infinite",
								"validateDelta(uint128)": "361",
								"validateSpotPrice(uint128)": "405"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 6389,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e59035fcea5326de2b6377b4d0a29fedcd102c11bd2808612fe193c1e0a3eb2164736f6c63430008110033",
									".code": [
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "97CC63D"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "AE67CCC"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "7CA542AC"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "A1BBB2E8"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 401,
											"end": 6389,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3765,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3765,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3765,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 553,
											"end": 742,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 553,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 553,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 553,
											"end": 742,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 553,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 553,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 553,
											"end": 742,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 553,
											"end": 742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 731,
											"end": 735,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 731,
											"end": 735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 553,
											"end": 742,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 553,
											"end": 742,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 553,
											"end": 742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 553,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 742,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1747,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1748,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1568,
											"end": 1755,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1068,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1068,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4060,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4123,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4137,
											"end": 4156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4257,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4261,
											"end": 4262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4245,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4245,
											"end": 4332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4286,
											"end": 4308,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4286,
											"end": 4308,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4278,
											"end": 4321,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4245,
											"end": 4332,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4245,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4465,
											"end": 4473,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4457,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4457,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4923,
											"end": 4928,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4911,
											"end": 4928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4911,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4911,
											"end": 4932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4932,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4911,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4911,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4911,
											"end": 4932,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4911,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4879,
											"end": 4932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4932,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5389,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5380,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5419,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5380,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5365,
											"end": 5419,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5365,
											"end": 5419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4591,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5800,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5773,
											"end": 5774,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5774,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5762,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5750,
											"end": 5775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5758,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5750,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5775,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5750,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5750,
											"end": 5783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5750,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5749,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5749,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5710,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5702,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5702,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5702,
											"end": 5800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5702,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5800,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5702,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5800,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5903,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5676,
											"end": 5800,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5954,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5903,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5903,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5903,
											"end": 5999,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5903,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5889,
											"end": 5999,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6084,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6084,
											"end": 6095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6114,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6084,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6084,
											"end": 6138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6084,
											"end": 6138,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6084,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6238,
											"end": 6249,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6138,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6302,
											"end": 6307,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6307,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6380,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6364,
											"end": 6380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 6387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1328,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1557,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1545,
											"end": 1632,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1586,
											"end": 1608,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1608,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1578,
											"end": 1621,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1632,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1545,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1772,
											"end": 1780,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1764,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1764,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1752,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1752,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1728,
											"end": 1780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1827,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1900,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1790,
											"end": 1900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1876,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1878,
											"end": 1879,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1843,
											"end": 1889,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1900,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1790,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1945,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1932,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2618,
											"end": 2623,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2606,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3082,
											"end": 3090,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3070,
											"end": 3095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3078,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3070,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3095,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3070,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3070,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3070,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3069,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3069,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3069,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3027,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3019,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3054,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3019,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3019,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3019,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3019,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2994,
											"end": 3120,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2994,
											"end": 3120,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3272,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3222,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3222,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3317,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3222,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3317,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3401,
											"end": 3411,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3401,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3401,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3387,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3454,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3526,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3526,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3526,
											"end": 3551,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3526,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3690,
											"end": 3698,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3698,
											"name": "SWAP14",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "SWAP13",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3551,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 3705,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 3705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1421,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 919,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1125,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1226,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1226,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1240,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1240,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1245,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1204,
											"end": 1291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1265,
											"end": 1277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1204,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1405,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1405,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 919,
											"end": 1421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 202,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 14,
											"end": 202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 178,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 111,
											"end": 196,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 192,
											"end": 193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 182,
											"end": 194,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 196,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 111,
											"end": 196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 207,
											"end": 673,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 207,
											"end": 673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 302,
											"end": 308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 318,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 390,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 375,
											"end": 384,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 366,
											"end": 373,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 362,
											"end": 385,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 358,
											"end": 391,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 355,
											"end": 408,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 355,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 355,
											"end": 408,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 404,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 406,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 355,
											"end": 408,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 355,
											"end": 408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 427,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 456,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 427,
											"end": 456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 456,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 417,
											"end": 456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 475,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 507,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 475,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 475,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 475,
											"end": 513,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 207,
											"end": 673,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 207,
											"end": 673,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 465,
											"end": 513,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 465,
											"end": 513,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 563,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 545,
											"end": 563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 564,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 532,
											"end": 564,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 611,
											"end": 613,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 596,
											"end": 614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 596,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 583,
											"end": 615,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 583,
											"end": 615,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 662,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 647,
											"end": 666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 634,
											"end": 667,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 634,
											"end": 667,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 207,
											"end": 673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 678,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 916,
											"end": 935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 916,
											"end": 935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 954,
											"end": 967,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 954,
											"end": 967,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 944,
											"end": 1088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1020,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 1005,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1001,
											"end": 1021,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 998,
											"end": 999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1049,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1077,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 944,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1122,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1278,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1278,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1261,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1310,
											"end": 1312,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1295,
											"end": 1313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1356,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1338,
											"end": 1357,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 678,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 1372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1563,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1377,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1491,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1475,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1509,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1457,
											"end": 1509,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1509,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1457,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1528,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1557,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1528,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1557,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1563,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1377,
											"end": 1563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1887,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1760,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1821,
											"end": 1831,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 1816,
											"end": 1819,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1812,
											"end": 1832,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1833,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1856,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 1857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1881,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2060,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1892,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1974,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2028,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1993,
											"end": 2030,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1983,
											"end": 2054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2034,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2060,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2060,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1892,
											"end": 2060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2065,
											"end": 2192,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2065,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2121,
											"end": 2124,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2117,
											"end": 2137,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2138,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2161,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2185,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2186,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2197,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2336,
											"end": 2373,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2353,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2401,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2401,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2407,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2413,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2615,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2418,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2540,
											"end": 2550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 2563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2536,
											"end": 2563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2586,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2589,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2615,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2615,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2820,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2620,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2756,
											"end": 2766,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2766,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2776,
											"end": 2814,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2794,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2794,
											"end": 2812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2924,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2947,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2910,
											"end": 2947,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2927,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2927,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 3078,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2958,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3029,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3029,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3083,
											"end": 3208,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3083,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3169,
											"end": 3179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3169,
											"end": 3179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3169,
											"end": 3179,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3202,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3166,
											"end": 3202,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3182,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3182,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"lib/solmate/src/utils/FixedPointMathLib.sol",
								"src/bonding-curves/CurveErrorCodes.sol",
								"src/bonding-curves/ICurve.sol",
								"src/bonding-curves/LinearCurve.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getBuyInfo(uint128,uint128,uint256,uint256,uint256)": "7ca542ac",
							"getSellInfo(uint128,uint128,uint256,uint256,uint256)": "097cc63d",
							"validateDelta(uint128)": "0ae67ccc",
							"validateSpotPrice(uint128)": "a1bbb2e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"numItems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeeMultiplier\",\"type\":\"uint256\"}],\"name\":\"getBuyInfo\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"inputValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"numItems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFeeMultiplier\",\"type\":\"uint256\"}],\"name\":\"getSellInfo\",\"outputs\":[{\"internalType\":\"enum CurveErrorCodes.Error\",\"name\":\"error\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"newSpotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"newDelta\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"outputValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"validateDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"validateSpotPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getBuyInfo(uint128,uint128,uint256,uint256,uint256)\":{\"details\":\"See {ICurve-getBuyInfo}\"},\"getSellInfo(uint128,uint128,uint256,uint256,uint256)\":{\"details\":\"See {ICurve-getSellInfo}\"},\"validateDelta(uint128)\":{\"details\":\"See {ICurve-validateDelta}\"},\"validateSpotPrice(uint128)\":{\"details\":\"See {ICurve-validateSpotPrice}\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bonding-curves/LinearCurve.sol\":\"LinearCurve\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x11bae04ee197bfb3b5dbb4a95eae81f500314b76be91ad692b10f00782fc9bf6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e93f309a48206eed2f1fb9a21eb55601c86652eeeafdeec7c1dd23aec80b9587\",\"dweb:/ipfs/QmTDRdGLWTqXfYsRyCZ2vBKydXSf1JH7o2F1RCpmFHKprz\"]},\"src/bonding-curves/CurveErrorCodes.sol\":{\"keccak256\":\"0x921fa756278ee39ea5e10c85933f1775ff4a412b700961837097b5da72e2c2ca\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8bc64cbcac649bcc4ea42df0c913dde0c7cb90cb2e724b8ed12e4d3f37e5436c\",\"dweb:/ipfs/Qmcyh8k4pbcDB9qSPMppbAYDYgbweH4sy4AaAEjFHYHBcZ\"]},\"src/bonding-curves/ICurve.sol\":{\"keccak256\":\"0xc845d2cb70966da8b2bd6f5d51abbfd459ae9c3f27449b8243aa5182bc174d24\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3338d5eea46a635ead3c390632dc4eaa0de0a870c784902c27c3c88359fce0d2\",\"dweb:/ipfs/QmWmELkig6wiKxEzuNRmf2PFjJbBJFnePSASh2DKBnCWfX\"]},\"src/bonding-curves/LinearCurve.sol\":{\"keccak256\":\"0xd4390dad7cb5ed4219784f0fbb48eed89dd4a5344a3737bccea30f3840c3fcb4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://bda92b87412d157161fcd3a16a868e6aea9274b521b7949f8f6b437570dc23b9\",\"dweb:/ipfs/QmWphYCArfBeNZnjYrkyvZ25JEuusLjhdqZxRrebHvLcQG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/solmate/src/utils/FixedPointMathLib.sol": {
				"ast": {
					"absolutePath": "lib/solmate/src/utils/FixedPointMathLib.sol",
					"exportedSymbols": {
						"FixedPointMathLib": [
							288
						]
					},
					"id": 289,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPointMathLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "68:277:0",
								"text": "@notice Arithmetic library with operations for fixed-point numbers.\n @author Modified from Dappsys V2 (https://github.com/dapp-org/dappsys-v2/blob/main/src/math.sol)\n and ABDK (https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol)"
							},
							"fullyImplemented": true,
							"id": 288,
							"linearizedBaseContracts": [
								288
							],
							"name": "FixedPointMathLib",
							"nameLocation": "353:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "YAD",
									"nameLocation": "589:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 288,
									"src": "563:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "563:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316538",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "595:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"value": "1e8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "WAD",
									"nameLocation": "630:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 288,
									"src": "604:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "636:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 11,
									"mutability": "constant",
									"name": "RAY",
									"nameLocation": "672:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 288,
									"src": "646:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653237",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "678:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"value": "1e27"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 14,
									"mutability": "constant",
									"name": "RAD",
									"nameLocation": "714:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 288,
									"src": "688:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "688:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653435",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "720:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000_by_1",
											"typeString": "int_const 1000...(38 digits omitted)...0000"
										},
										"value": "1e45"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "1037:384:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1056:359:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1111:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1120:1:0"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1123:1:0"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:9:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nodeType": "YulIdentifier",
																	"src": "1111:1:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1247:44:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1275:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1265:12:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1265:12:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1224:1:0"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1217:6:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1217:9:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "z",
																								"nodeType": "YulIdentifier",
																								"src": "1235:1:0"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1238:1:0"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1231:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1231:9:0"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1242:1:0"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1228:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1228:16:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1214:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:31:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1207:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:39:0"
															},
															"nodeType": "YulIf",
															"src": "1204:87:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1384:21:0",
															"value": {
																"arguments": [
																	{
																		"name": "z",
																		"nodeType": "YulIdentifier",
																		"src": "1393:1:0"
																	},
																	{
																		"name": "baseUnit",
																		"nodeType": "YulIdentifier",
																		"src": "1396:8:0"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1389:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:16:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nodeType": "YulIdentifier",
																	"src": "1384:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 20,
														"isOffset": false,
														"isSlot": false,
														"src": "1396:8:0",
														"valueSize": 1
													},
													{
														"declaration": 16,
														"isOffset": false,
														"isSlot": false,
														"src": "1120:1:0",
														"valueSize": 1
													},
													{
														"declaration": 16,
														"isOffset": false,
														"isSlot": false,
														"src": "1224:1:0",
														"valueSize": 1
													},
													{
														"declaration": 16,
														"isOffset": false,
														"isSlot": false,
														"src": "1238:1:0",
														"valueSize": 1
													},
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": false,
														"src": "1123:1:0",
														"valueSize": 1
													},
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": false,
														"src": "1242:1:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "1111:1:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "1235:1:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "1384:1:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "1393:1:0",
														"valueSize": 1
													}
												],
												"id": 25,
												"nodeType": "InlineAssembly",
												"src": "1047:368:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fmul",
									"nameLocation": "928:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "950:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "942:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "969:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "961:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "baseUnit",
												"nameLocation": "988:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "980:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "932:70:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1034:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "1026:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:11:0"
									},
									"scope": 288,
									"src": "919:502:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1545:565:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1564:540:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1626:21:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1635:1:0"
																	},
																	{
																		"name": "baseUnit",
																		"nodeType": "YulIdentifier",
																		"src": "1638:8:0"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1631:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1631:16:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nodeType": "YulIdentifier",
																	"src": "1626:1:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1935:44:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1960:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:12:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:12:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1771:1:0"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1764:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:9:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1891:1:0"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1884:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1884:9:0"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "z",
																										"nodeType": "YulIdentifier",
																										"src": "1902:1:0"
																									},
																									{
																										"name": "x",
																										"nodeType": "YulIdentifier",
																										"src": "1905:1:0"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nodeType": "YulIdentifier",
																									"src": "1898:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1898:9:0"
																							},
																							{
																								"name": "baseUnit",
																								"nodeType": "YulIdentifier",
																								"src": "1909:8:0"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "1895:2:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1895:23:0"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "1881:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1881:38:0"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1874:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1874:46:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1664:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:270:0"
															},
															"nodeType": "YulIf",
															"src": "1661:318:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2080:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "z",
																		"nodeType": "YulIdentifier",
																		"src": "2089:1:0"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2092:1:0"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2085:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:9:0"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nodeType": "YulIdentifier",
																	"src": "2080:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 33,
														"isOffset": false,
														"isSlot": false,
														"src": "1638:8:0",
														"valueSize": 1
													},
													{
														"declaration": 33,
														"isOffset": false,
														"isSlot": false,
														"src": "1909:8:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "1635:1:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "1891:1:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "1905:1:0",
														"valueSize": 1
													},
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": false,
														"src": "1771:1:0",
														"valueSize": 1
													},
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": false,
														"src": "2092:1:0",
														"valueSize": 1
													},
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "1626:1:0",
														"valueSize": 1
													},
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "1902:1:0",
														"valueSize": 1
													},
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "2080:1:0",
														"valueSize": 1
													},
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "2089:1:0",
														"valueSize": 1
													}
												],
												"id": 38,
												"nodeType": "InlineAssembly",
												"src": "1555:549:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fdiv",
									"nameLocation": "1436:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1458:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1450:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1477:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1469:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "baseUnit",
												"nameLocation": "1496:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1488:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1440:70:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1542:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1534:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:11:0"
									},
									"scope": 288,
									"src": "1427:683:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2234:1490:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2253:1465:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2295:188:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nodeType": "YulBlock",
																							"src": "2345:53:0",
																							"statements": [
																								{
																									"nodeType": "YulAssignment",
																									"src": "2367:13:0",
																									"value": {
																										"name": "baseUnit",
																										"nodeType": "YulIdentifier",
																										"src": "2372:8:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nodeType": "YulIdentifier",
																											"src": "2367:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nodeType": "YulCase",
																						"src": "2338:60:0",
																						"value": {
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2343:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nodeType": "YulBlock",
																							"src": "2423:46:0",
																							"statements": [
																								{
																									"nodeType": "YulAssignment",
																									"src": "2445:6:0",
																									"value": {
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2450:1:0",
																										"type": "",
																										"value": "0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nodeType": "YulIdentifier",
																											"src": "2445:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nodeType": "YulCase",
																						"src": "2415:54:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"name": "n",
																					"nodeType": "YulIdentifier",
																					"src": "2320:1:0"
																				},
																				"nodeType": "YulSwitch",
																				"src": "2313:156:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2288:195:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2293:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2504:1204:0",
																		"statements": [
																			{
																				"cases": [
																					{
																						"body": {
																							"nodeType": "YulBlock",
																							"src": "2562:53:0",
																							"statements": [
																								{
																									"nodeType": "YulAssignment",
																									"src": "2584:13:0",
																									"value": {
																										"name": "baseUnit",
																										"nodeType": "YulIdentifier",
																										"src": "2589:8:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nodeType": "YulIdentifier",
																											"src": "2584:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nodeType": "YulCase",
																						"src": "2555:60:0",
																						"value": {
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2560:1:0",
																							"type": "",
																							"value": "0"
																						}
																					},
																					{
																						"body": {
																							"nodeType": "YulBlock",
																							"src": "2640:46:0",
																							"statements": [
																								{
																									"nodeType": "YulAssignment",
																									"src": "2662:6:0",
																									"value": {
																										"name": "x",
																										"nodeType": "YulIdentifier",
																										"src": "2667:1:0"
																									},
																									"variableNames": [
																										{
																											"name": "z",
																											"nodeType": "YulIdentifier",
																											"src": "2662:1:0"
																										}
																									]
																								}
																							]
																						},
																						"nodeType": "YulCase",
																						"src": "2632:54:0",
																						"value": "default"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"name": "n",
																							"nodeType": "YulIdentifier",
																							"src": "2533:1:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2536:1:0",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "mod",
																						"nodeType": "YulIdentifier",
																						"src": "2529:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2529:9:0"
																				},
																				"nodeType": "YulSwitch",
																				"src": "2522:164:0"
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2703:28:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "baseUnit",
																							"nodeType": "YulIdentifier",
																							"src": "2719:8:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2729:1:0",
																							"type": "",
																							"value": "2"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "2715:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2715:16:0"
																				},
																				"variables": [
																					{
																						"name": "half",
																						"nodeType": "YulTypedName",
																						"src": "2707:4:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2864:830:0",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2886:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "x",
																										"nodeType": "YulIdentifier",
																										"src": "2900:1:0"
																									},
																									{
																										"name": "x",
																										"nodeType": "YulIdentifier",
																										"src": "2903:1:0"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "2896:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2896:9:0"
																							},
																							"variables": [
																								{
																									"name": "xx",
																									"nodeType": "YulTypedName",
																									"src": "2890:2:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"body": {
																								"nodeType": "YulBlock",
																								"src": "2955:60:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2988:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2991:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "2981:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2981:12:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "2981:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "xx",
																														"nodeType": "YulIdentifier",
																														"src": "2943:2:0"
																													},
																													{
																														"name": "x",
																														"nodeType": "YulIdentifier",
																														"src": "2947:1:0"
																													}
																												],
																												"functionName": {
																													"name": "div",
																													"nodeType": "YulIdentifier",
																													"src": "2939:3:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2939:10:0"
																											},
																											{
																												"name": "x",
																												"nodeType": "YulIdentifier",
																												"src": "2951:1:0"
																											}
																										],
																										"functionName": {
																											"name": "eq",
																											"nodeType": "YulIdentifier",
																											"src": "2936:2:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2936:17:0"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nodeType": "YulIdentifier",
																									"src": "2929:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2929:25:0"
																							},
																							"nodeType": "YulIf",
																							"src": "2926:89:0"
																						},
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3036:28:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xx",
																										"nodeType": "YulIdentifier",
																										"src": "3055:2:0"
																									},
																									{
																										"name": "half",
																										"nodeType": "YulIdentifier",
																										"src": "3059:4:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3051:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3051:13:0"
																							},
																							"variables": [
																								{
																									"name": "xxRound",
																									"nodeType": "YulTypedName",
																									"src": "3040:7:0",
																									"type": ""
																								}
																							]
																						},
																						{
																							"body": {
																								"nodeType": "YulBlock",
																								"src": "3104:60:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "3137:1:0",
																													"type": "",
																													"value": "0"
																												},
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "3140:1:0",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "3130:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3130:12:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "3130:12:0"
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nodeType": "YulIdentifier",
																										"src": "3091:7:0"
																									},
																									{
																										"name": "xx",
																										"nodeType": "YulIdentifier",
																										"src": "3100:2:0"
																									}
																								],
																								"functionName": {
																									"name": "lt",
																									"nodeType": "YulIdentifier",
																									"src": "3088:2:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3088:15:0"
																							},
																							"nodeType": "YulIf",
																							"src": "3085:79:0"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3185:27:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "xxRound",
																										"nodeType": "YulIdentifier",
																										"src": "3194:7:0"
																									},
																									{
																										"name": "baseUnit",
																										"nodeType": "YulIdentifier",
																										"src": "3203:8:0"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nodeType": "YulIdentifier",
																									"src": "3190:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3190:22:0"
																							},
																							"variableNames": [
																								{
																									"name": "x",
																									"nodeType": "YulIdentifier",
																									"src": "3185:1:0"
																								}
																							]
																						},
																						{
																							"body": {
																								"nodeType": "YulBlock",
																								"src": "3246:430:0",
																								"statements": [
																									{
																										"nodeType": "YulVariableDeclaration",
																										"src": "3272:19:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "z",
																													"nodeType": "YulIdentifier",
																													"src": "3286:1:0"
																												},
																												{
																													"name": "x",
																													"nodeType": "YulIdentifier",
																													"src": "3289:1:0"
																												}
																											],
																											"functionName": {
																												"name": "mul",
																												"nodeType": "YulIdentifier",
																												"src": "3282:3:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3282:9:0"
																										},
																										"variables": [
																											{
																												"name": "zx",
																												"nodeType": "YulTypedName",
																												"src": "3276:2:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nodeType": "YulBlock",
																											"src": "3369:68:0",
																											"statements": [
																												{
																													"expression": {
																														"arguments": [
																															{
																																"kind": "number",
																																"nodeType": "YulLiteral",
																																"src": "3406:1:0",
																																"type": "",
																																"value": "0"
																															},
																															{
																																"kind": "number",
																																"nodeType": "YulLiteral",
																																"src": "3409:1:0",
																																"type": "",
																																"value": "0"
																															}
																														],
																														"functionName": {
																															"name": "revert",
																															"nodeType": "YulIdentifier",
																															"src": "3399:6:0"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3399:12:0"
																													},
																													"nodeType": "YulExpressionStatement",
																													"src": "3399:12:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "x",
																																	"nodeType": "YulIdentifier",
																																	"src": "3337:1:0"
																																}
																															],
																															"functionName": {
																																"name": "iszero",
																																"nodeType": "YulIdentifier",
																																"src": "3330:6:0"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "3330:9:0"
																														}
																													],
																													"functionName": {
																														"name": "iszero",
																														"nodeType": "YulIdentifier",
																														"src": "3323:6:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "3323:17:0"
																												},
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "zx",
																																			"nodeType": "YulIdentifier",
																																			"src": "3356:2:0"
																																		},
																																		{
																																			"name": "x",
																																			"nodeType": "YulIdentifier",
																																			"src": "3360:1:0"
																																		}
																																	],
																																	"functionName": {
																																		"name": "div",
																																		"nodeType": "YulIdentifier",
																																		"src": "3352:3:0"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "3352:10:0"
																																},
																																{
																																	"name": "z",
																																	"nodeType": "YulIdentifier",
																																	"src": "3364:1:0"
																																}
																															],
																															"functionName": {
																																"name": "eq",
																																"nodeType": "YulIdentifier",
																																"src": "3349:2:0"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "3349:17:0"
																														}
																													],
																													"functionName": {
																														"name": "iszero",
																														"nodeType": "YulIdentifier",
																														"src": "3342:6:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "3342:25:0"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nodeType": "YulIdentifier",
																												"src": "3319:3:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3319:49:0"
																										},
																										"nodeType": "YulIf",
																										"src": "3316:121:0"
																									},
																									{
																										"nodeType": "YulVariableDeclaration",
																										"src": "3462:28:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zx",
																													"nodeType": "YulIdentifier",
																													"src": "3481:2:0"
																												},
																												{
																													"name": "half",
																													"nodeType": "YulIdentifier",
																													"src": "3485:4:0"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "3477:3:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3477:13:0"
																										},
																										"variables": [
																											{
																												"name": "zxRound",
																												"nodeType": "YulTypedName",
																												"src": "3466:7:0",
																												"type": ""
																											}
																										]
																									},
																									{
																										"body": {
																											"nodeType": "YulBlock",
																											"src": "3534:68:0",
																											"statements": [
																												{
																													"expression": {
																														"arguments": [
																															{
																																"kind": "number",
																																"nodeType": "YulLiteral",
																																"src": "3571:1:0",
																																"type": "",
																																"value": "0"
																															},
																															{
																																"kind": "number",
																																"nodeType": "YulLiteral",
																																"src": "3574:1:0",
																																"type": "",
																																"value": "0"
																															}
																														],
																														"functionName": {
																															"name": "revert",
																															"nodeType": "YulIdentifier",
																															"src": "3564:6:0"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3564:12:0"
																													},
																													"nodeType": "YulExpressionStatement",
																													"src": "3564:12:0"
																												}
																											]
																										},
																										"condition": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nodeType": "YulIdentifier",
																													"src": "3521:7:0"
																												},
																												{
																													"name": "zx",
																													"nodeType": "YulIdentifier",
																													"src": "3530:2:0"
																												}
																											],
																											"functionName": {
																												"name": "lt",
																												"nodeType": "YulIdentifier",
																												"src": "3518:2:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3518:15:0"
																										},
																										"nodeType": "YulIf",
																										"src": "3515:87:0"
																									},
																									{
																										"nodeType": "YulAssignment",
																										"src": "3627:27:0",
																										"value": {
																											"arguments": [
																												{
																													"name": "zxRound",
																													"nodeType": "YulIdentifier",
																													"src": "3636:7:0"
																												},
																												{
																													"name": "baseUnit",
																													"nodeType": "YulIdentifier",
																													"src": "3645:8:0"
																												}
																											],
																											"functionName": {
																												"name": "div",
																												"nodeType": "YulIdentifier",
																												"src": "3632:3:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3632:22:0"
																										},
																										"variableNames": [
																											{
																												"name": "z",
																												"nodeType": "YulIdentifier",
																												"src": "3627:1:0"
																											}
																										]
																									}
																								]
																							},
																							"condition": {
																								"arguments": [
																									{
																										"name": "n",
																										"nodeType": "YulIdentifier",
																										"src": "3240:1:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3243:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "mod",
																									"nodeType": "YulIdentifier",
																									"src": "3236:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3236:9:0"
																							},
																							"nodeType": "YulIf",
																							"src": "3233:443:0"
																						}
																					]
																				},
																				"condition": {
																					"name": "n",
																					"nodeType": "YulIdentifier",
																					"src": "2807:1:0"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2809:54:0",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2831:14:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "n",
																										"nodeType": "YulIdentifier",
																										"src": "2840:1:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2843:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nodeType": "YulIdentifier",
																									"src": "2836:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2836:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nodeType": "YulIdentifier",
																									"src": "2831:1:0"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2752:54:0",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2774:14:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "n",
																										"nodeType": "YulIdentifier",
																										"src": "2783:1:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2786:1:0",
																										"type": "",
																										"value": "2"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nodeType": "YulIdentifier",
																									"src": "2779:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2779:9:0"
																							},
																							"variableNames": [
																								{
																									"name": "n",
																									"nodeType": "YulIdentifier",
																									"src": "2774:1:0"
																								}
																							]
																						}
																					]
																				},
																				"src": "2748:946:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2496:1212:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "x",
																"nodeType": "YulIdentifier",
																"src": "2274:1:0"
															},
															"nodeType": "YulSwitch",
															"src": "2267:1441:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "2372:8:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "2589:8:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "2719:8:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "3203:8:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "3645:8:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2320:1:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2533:1:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2774:1:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2783:1:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2807:1:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2831:1:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "2840:1:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "3240:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "2274:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "2667:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "2900:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "2903:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "2947:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "2951:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "3185:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "3289:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "3337:1:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "3360:1:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "2367:1:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "2445:1:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "2584:1:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "2662:1:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "3286:1:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "3364:1:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "3627:1:0",
														"valueSize": 1
													}
												],
												"id": 51,
												"nodeType": "InlineAssembly",
												"src": "2244:1474:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fpow",
									"nameLocation": "2125:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2147:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2139:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "2166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "baseUnit",
												"nameLocation": "2185:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2177:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:70:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2231:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2222:11:0"
									},
									"scope": 288,
									"src": "2116:1608:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "3983:1224:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 60,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "3997:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4002:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3997:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "3993:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4012:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 59,
													"id": 64,
													"nodeType": "Return",
													"src": "4005:8:0"
												}
											},
											{
												"expression": {
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 66,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "4024:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4024:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "4024:10:0"
											},
											{
												"assignments": [
													71
												],
												"declarations": [
													{
														"constant": false,
														"id": 71,
														"mutability": "mutable",
														"name": "xAux",
														"nameLocation": "4053:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "4045:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 70,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"id": 72,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 55,
													"src": "4060:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4045:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 74,
														"name": "xAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4076:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4084:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "4076:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 86,
												"nodeType": "IfStatement",
												"src": "4072:113:0",
												"trueBody": {
													"id": 85,
													"nodeType": "Block",
													"src": "4121:64:0",
													"statements": [
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 77,
																	"name": "xAux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4135:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4144:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "4135:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "4135:12:0"
														},
														{
															"expression": {
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 81,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "4161:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4172:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "4161:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 84,
															"nodeType": "ExpressionStatement",
															"src": "4161:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 87,
														"name": "xAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4199:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4207:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "4199:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "IfStatement",
												"src": "4195:96:0",
												"trueBody": {
													"id": 98,
													"nodeType": "Block",
													"src": "4228:63:0",
													"statements": [
														{
															"expression": {
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 90,
																	"name": "xAux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4242:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4251:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "4242:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 93,
															"nodeType": "ExpressionStatement",
															"src": "4242:11:0"
														},
														{
															"expression": {
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 94,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "4267:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4278:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "4267:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 97,
															"nodeType": "ExpressionStatement",
															"src": "4267:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 100,
														"name": "xAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4305:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4313:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "4305:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "4301:88:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "4326:63:0",
													"statements": [
														{
															"expression": {
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 103,
																	"name": "xAux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4340:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4349:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "4340:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ExpressionStatement",
															"src": "4340:11:0"
														},
														{
															"expression": {
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 107,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "4365:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4376:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "4365:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 110,
															"nodeType": "ExpressionStatement",
															"src": "4365:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "xAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4403:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "4403:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "IfStatement",
												"src": "4399:83:0",
												"trueBody": {
													"id": 124,
													"nodeType": "Block",
													"src": "4420:62:0",
													"statements": [
														{
															"expression": {
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 116,
																	"name": "xAux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4434:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4443:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "4434:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 119,
															"nodeType": "ExpressionStatement",
															"src": "4434:11:0"
														},
														{
															"expression": {
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 120,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "4459:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4470:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "4459:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 123,
															"nodeType": "ExpressionStatement",
															"src": "4459:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 126,
														"name": "xAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4496:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "4496:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 138,
												"nodeType": "IfStatement",
												"src": "4492:80:0",
												"trueBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "4511:61:0",
													"statements": [
														{
															"expression": {
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 129,
																	"name": "xAux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4525:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4534:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "4525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 132,
															"nodeType": "ExpressionStatement",
															"src": "4525:10:0"
														},
														{
															"expression": {
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 133,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "4549:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4560:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "4549:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 136,
															"nodeType": "ExpressionStatement",
															"src": "4549:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "xAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4586:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4594:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "4586:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 151,
												"nodeType": "IfStatement",
												"src": "4582:79:0",
												"trueBody": {
													"id": 150,
													"nodeType": "Block",
													"src": "4600:61:0",
													"statements": [
														{
															"expression": {
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 142,
																	"name": "xAux",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4623:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "4614:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 145,
															"nodeType": "ExpressionStatement",
															"src": "4614:10:0"
														},
														{
															"expression": {
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 146,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "4638:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "4638:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 149,
															"nodeType": "ExpressionStatement",
															"src": "4638:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "xAux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "4675:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307838",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "0x8"
													},
													"src": "4675:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "4671:29:0",
												"trueBody": {
													"expression": {
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 155,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "4688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "<<=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4699:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4688:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 158,
													"nodeType": "ExpressionStatement",
													"src": "4688:12:0"
												}
											},
											{
												"id": 251,
												"nodeType": "UncheckedBlock",
												"src": "4711:490:0",
												"statements": [
													{
														"expression": {
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 160,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "4735:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 161,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "4745:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 162,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 55,
																					"src": "4754:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 163,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "4758:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4754:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4745:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 166,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4744:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4769:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4744:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4735:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 170,
														"nodeType": "ExpressionStatement",
														"src": "4735:35:0"
													},
													{
														"expression": {
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 171,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "4784:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 172,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "4794:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 173,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 55,
																					"src": "4803:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 174,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "4807:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4803:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4794:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 177,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4793:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4818:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4793:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4784:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 181,
														"nodeType": "ExpressionStatement",
														"src": "4784:35:0"
													},
													{
														"expression": {
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 182,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "4833:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 183,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "4843:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 184,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 55,
																					"src": "4852:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 185,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "4856:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4852:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4843:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 188,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4842:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4867:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4842:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4833:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 192,
														"nodeType": "ExpressionStatement",
														"src": "4833:35:0"
													},
													{
														"expression": {
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 193,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "4882:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 194,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "4892:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 195,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 55,
																					"src": "4901:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 196,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "4905:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4901:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4892:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4891:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4916:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4891:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4882:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 203,
														"nodeType": "ExpressionStatement",
														"src": "4882:35:0"
													},
													{
														"expression": {
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 204,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "4931:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 205,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "4941:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 206,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 55,
																					"src": "4950:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 207,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "4954:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4950:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4941:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 210,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4940:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4965:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4940:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4931:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 214,
														"nodeType": "ExpressionStatement",
														"src": "4931:35:0"
													},
													{
														"expression": {
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 215,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "4980:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 216,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "4990:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 217,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 55,
																					"src": "4999:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 218,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "5003:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4999:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4990:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 221,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4989:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4989:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4980:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 225,
														"nodeType": "ExpressionStatement",
														"src": "4980:35:0"
													},
													{
														"expression": {
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 226,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "5029:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 227,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "5039:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 228,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 55,
																					"src": "5048:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 229,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 58,
																					"src": "5052:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5048:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5039:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 232,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5038:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5063:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5038:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5029:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 236,
														"nodeType": "ExpressionStatement",
														"src": "5029:35:0"
													},
													{
														"assignments": [
															238
														],
														"declarations": [
															{
																"constant": false,
																"id": 238,
																"mutability": "mutable",
																"name": "roundedDownResult",
																"nameLocation": "5087:17:0",
																"nodeType": "VariableDeclaration",
																"scope": 251,
																"src": "5079:25:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 237,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5079:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 239,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "5107:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 240,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "5111:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5107:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5079:38:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "5136:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 244,
																"name": "roundedDownResult",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5145:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 250,
														"nodeType": "IfStatement",
														"src": "5132:58:0",
														"trueBody": {
															"expression": {
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 246,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "5164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 247,
																	"name": "roundedDownResult",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "5173:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5164:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 249,
															"nodeType": "ExpressionStatement",
															"src": "5164:26:0"
														}
													}
												]
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "3928:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3941:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3933:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3932:11:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:16:0"
									},
									"scope": 288,
									"src": "3919:1288:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "5282:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 262,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 263,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "5303:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5299:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 266,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5311:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5299:13:0",
													"trueExpression": {
														"id": 265,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "5307:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 268,
												"nodeType": "Return",
												"src": "5292:20:0"
											}
										]
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5222:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5234:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5226:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5245:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5237:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5225:22:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "5279:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5271:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5270:11:0"
									},
									"scope": 288,
									"src": "5213:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "5394:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "5411:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 280,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5415:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5411:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 283,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "5423:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5411:13:0",
													"trueExpression": {
														"id": 282,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "5419:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 285,
												"nodeType": "Return",
												"src": "5404:20:0"
											}
										]
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5334:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "5338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "5349:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5337:22:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "5391:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "5383:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5382:11:0"
									},
									"scope": 288,
									"src": "5325:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 289,
							"src": "345:5088:0",
							"usedErrors": []
						}
					],
					"src": "42:5392:0"
				},
				"id": 0
			},
			"src/bonding-curves/CurveErrorCodes.sol": {
				"ast": {
					"absolutePath": "src/bonding-curves/CurveErrorCodes.sol",
					"exportedSymbols": {
						"CurveErrorCodes": [
							295
						]
					},
					"id": 296,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CurveErrorCodes",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "CurveErrorCodes",
							"nameLocation": "71:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CurveErrorCodes.Error",
									"id": 294,
									"members": [
										{
											"id": 291,
											"name": "OK",
											"nameLocation": "114:2:1",
											"nodeType": "EnumValue",
											"src": "114:2:1"
										},
										{
											"id": 292,
											"name": "INVALID_NUMITEMS",
											"nameLocation": "138:16:1",
											"nodeType": "EnumValue",
											"src": "138:16:1"
										},
										{
											"id": 293,
											"name": "SPOT_PRICE_OVERFLOW",
											"nameLocation": "190:19:1",
											"nodeType": "EnumValue",
											"src": "190:19:1"
										}
									],
									"name": "Error",
									"nameLocation": "98:5:1",
									"nodeType": "EnumDefinition",
									"src": "93:174:1"
								}
							],
							"scope": 296,
							"src": "62:207:1",
							"usedErrors": []
						}
					],
					"src": "37:233:1"
				},
				"id": 1
			},
			"src/bonding-curves/ICurve.sol": {
				"ast": {
					"absolutePath": "src/bonding-curves/ICurve.sol",
					"exportedSymbols": {
						"CurveErrorCodes": [
							295
						],
						"ICurve": [
							366
						]
					},
					"id": 367,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"absolutePath": "src/bonding-curves/CurveErrorCodes.sol",
							"file": "./CurveErrorCodes.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 296,
							"src": "62:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "CurveErrorCodes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "70:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICurve",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 366,
							"linearizedBaseContracts": [
								366
							],
							"name": "ICurve",
							"nameLocation": "128:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "141:343:2",
										"text": "@notice Validates if a delta value is valid for the curve. The criteria for\nvalidity can be different for each type of curve, for instance ExponentialCurve\nrequires delta to be greater than 1.\n@param delta The delta value to be validated\n@return valid True if delta is valid, false otherwise"
									},
									"functionSelector": "0ae67ccc",
									"id": 307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateDelta",
									"nameLocation": "498:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 301,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:15:2"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "555:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "550:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "550:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:12:2"
									},
									"scope": 366,
									"src": "489:73:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "568:335:2",
										"text": "@notice Validates if a new spot price is valid for the curve. Spot price is generally assumed to be the immediate sell price of 1 NFT to the pool, in units of the pool's paired token.\n@param newSpotPrice The new spot price to be set\n@return valid True if the new spot price is valid, false otherwise"
									},
									"functionSelector": "a1bbb2e8",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateSpotPrice",
									"nameLocation": "917:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "newSpotPrice",
												"nameLocation": "943:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "935:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 309,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "1009:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1004:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:12:2"
									},
									"scope": 366,
									"src": "908:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "1022:1054:2",
										"text": "@notice Given the current state of the pair and the trade, computes how much the user\nshould pay to purchase an NFT from the pair, the new spot price, and other values.\n@param spotPrice The current selling spot price of the pair, in tokens\n@param delta The delta parameter of the pair, what it means depends on the curve\n@param numItems The number of NFTs the user is buying from the pair\n@param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n@param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n@return error Any math calculation errors, only Error.OK means the returned values are valid\n@return newSpotPrice The updated selling spot price, in tokens\n@return newDelta The updated delta, used to parameterize the bonding curve\n@return inputValue The amount that the user should pay, in tokens\n@return protocolFee The amount of fee to send to the protocol, in tokens"
									},
									"functionSelector": "7ca542ac",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyInfo",
									"nameLocation": "2090:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "spotPrice",
												"nameLocation": "2118:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2110:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 317,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "2145:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2137:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 319,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "numItems",
												"nameLocation": "2168:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2160:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "feeMultiplier",
												"nameLocation": "2194:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2186:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "protocolFeeMultiplier",
												"nameLocation": "2225:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2217:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:152:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "2335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2313:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Error_$294",
													"typeString": "enum CurveErrorCodes.Error"
												},
												"typeName": {
													"id": 329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 328,
														"name": "CurveErrorCodes.Error",
														"nameLocations": [
															"2313:15:2",
															"2329:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 294,
														"src": "2313:21:2"
													},
													"referencedDeclaration": 294,
													"src": "2313:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$294",
														"typeString": "enum CurveErrorCodes.Error"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "newSpotPrice",
												"nameLocation": "2362:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2354:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 331,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "newDelta",
												"nameLocation": "2396:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2388:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 333,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "inputValue",
												"nameLocation": "2426:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2418:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "2458:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2450:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:180:2"
									},
									"scope": 366,
									"src": "2081:399:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "2486:1059:2",
										"text": "@notice Given the current state of the pair and the trade, computes how much the user\nshould receive when selling NFTs to the pair, the new spot price, and other values.\n@param spotPrice The current selling spot price of the pair, in tokens\n@param delta The delta parameter of the pair, what it means depends on the curve\n@param numItems The number of NFTs the user is selling to the pair\n@param feeMultiplier Determines how much fee the LP takes from this trade, 18 decimals\n@param protocolFeeMultiplier Determines how much fee the protocol takes from this trade, 18 decimals\n@return error Any math calculation errors, only Error.OK means the returned values are valid\n@return newSpotPrice The updated selling spot price, in tokens\n@return newDelta The updated delta, used to parameterize the bonding curve\n@return outputValue The amount that the user should receive, in tokens\n@return protocolFee The amount of fee to send to the protocol, in tokens"
									},
									"functionSelector": "097cc63d",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSellInfo",
									"nameLocation": "3559:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "spotPrice",
												"nameLocation": "3588:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3580:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 342,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "3615:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3607:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 344,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3607:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "numItems",
												"nameLocation": "3638:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3630:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "feeMultiplier",
												"nameLocation": "3664:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3656:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "protocolFeeMultiplier",
												"nameLocation": "3695:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3687:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3570:152:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "3805:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3783:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Error_$294",
													"typeString": "enum CurveErrorCodes.Error"
												},
												"typeName": {
													"id": 354,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 353,
														"name": "CurveErrorCodes.Error",
														"nameLocations": [
															"3783:15:2",
															"3799:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 294,
														"src": "3783:21:2"
													},
													"referencedDeclaration": 294,
													"src": "3783:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$294",
														"typeString": "enum CurveErrorCodes.Error"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "newSpotPrice",
												"nameLocation": "3832:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3824:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 356,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "newDelta",
												"nameLocation": "3866:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3858:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 358,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "outputValue",
												"nameLocation": "3896:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3888:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "3929:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3921:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3769:181:2"
									},
									"scope": 366,
									"src": "3550:401:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 367,
							"src": "118:3835:2",
							"usedErrors": []
						}
					],
					"src": "37:3917:2"
				},
				"id": 2
			},
			"src/bonding-curves/LinearCurve.sol": {
				"ast": {
					"absolutePath": "src/bonding-curves/LinearCurve.sol",
					"exportedSymbols": {
						"CurveErrorCodes": [
							295
						],
						"FixedPointMathLib": [
							288
						],
						"ICurve": [
							366
						],
						"LinearCurve": [
							659
						]
					},
					"id": 660,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"absolutePath": "src/bonding-curves/ICurve.sol",
							"file": "./ICurve.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 367,
							"src": "62:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 369,
										"name": "ICurve",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 366,
										"src": "70:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/bonding-curves/CurveErrorCodes.sol",
							"file": "./CurveErrorCodes.sol",
							"id": 372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 296,
							"src": "99:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 371,
										"name": "CurveErrorCodes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 295,
										"src": "107:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/solmate/src/utils/FixedPointMathLib.sol",
							"file": "../../lib/solmate/src/utils/FixedPointMathLib.sol",
							"id": 374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 289,
							"src": "154:84:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 373,
										"name": "FixedPointMathLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 288,
										"src": "162:17:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 375,
										"name": "ICurve",
										"nameLocations": [
											"425:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 366,
										"src": "425:6:3"
									},
									"id": 376,
									"nodeType": "InheritanceSpecifier",
									"src": "425:6:3"
								},
								{
									"baseName": {
										"id": 377,
										"name": "CurveErrorCodes",
										"nameLocations": [
											"433:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "433:15:3"
									},
									"id": 378,
									"nodeType": "InheritanceSpecifier",
									"src": "433:15:3"
								}
							],
							"canonicalName": "LinearCurve",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 659,
							"linearizedBaseContracts": [
								659,
								295,
								366
							],
							"name": "LinearCurve",
							"nameLocation": "410:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 381,
									"libraryName": {
										"id": 379,
										"name": "FixedPointMathLib",
										"nameLocations": [
											"461:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 288,
										"src": "461:17:3"
									},
									"nodeType": "UsingForDirective",
									"src": "455:36:3",
									"typeName": {
										"id": 380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"baseFunctions": [
										307
									],
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "653:89:3",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "731:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 389,
												"id": 391,
												"nodeType": "Return",
												"src": "724:11:3"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "497:51:3",
										"text": "@dev See {ICurve-validateDelta}"
									},
									"functionSelector": "0ae67ccc",
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateDelta",
									"nameLocation": "562:13:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 386,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "623:8:3"
									},
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "585:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 383,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:33:3"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "646:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "641:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "641:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:12:3"
									},
									"scope": 659,
									"src": "553:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										315
									],
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "915:94:3",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "998:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 401,
												"id": 403,
												"nodeType": "Return",
												"src": "991:11:3"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "748:55:3",
										"text": "@dev See {ICurve-validateSpotPrice}"
									},
									"functionSelector": "a1bbb2e8",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateSpotPrice",
									"nameLocation": "817:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 398,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "891:8:3"
									},
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "844:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 395,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:42:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "909:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "909:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:6:3"
									},
									"scope": 659,
									"src": "808:201:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										340
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "1472:2233:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"name": "numItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1549:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1561:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1549:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "1545:87:3",
												"trueBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "1564:68:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 434,
																			"name": "Error",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "1586:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Error_$294_$",
																				"typeString": "type(enum CurveErrorCodes.Error)"
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1592:16:3",
																		"memberName": "INVALID_NUMITEMS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 292,
																		"src": "1586:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Error_$294",
																			"typeString": "enum CurveErrorCodes.Error"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1610:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1613:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1619:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1585:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_enum$_Error_$294_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(enum CurveErrorCodes.Error,int_const 0,int_const 0,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 430,
															"id": 441,
															"nodeType": "Return",
															"src": "1578:43:3"
														}
													]
												}
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "newSpotPrice_",
														"nameLocation": "1736:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "1728:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1728:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 451,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 446,
														"name": "spotPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1752:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 447,
															"name": "delta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1764:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 448,
															"name": "numItems",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1772:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1764:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1752:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1728:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "newSpotPrice_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1794:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1815:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 454,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "1815:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 453,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1810:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1810:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1824:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1810:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1794:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "1790:110:3",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "1829:71:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 459,
																			"name": "Error",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "1851:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Error_$294_$",
																				"typeString": "type(enum CurveErrorCodes.Error)"
																			}
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1857:19:3",
																		"memberName": "SPOT_PRICE_OVERFLOW",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 293,
																		"src": "1851:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Error_$294",
																			"typeString": "enum CurveErrorCodes.Error"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1878:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1881:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1884:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1887:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 465,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1850:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_enum$_Error_$294_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(enum CurveErrorCodes.Error,int_const 0,int_const 0,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 430,
															"id": 466,
															"nodeType": "Return",
															"src": "1843:46:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 469,
														"name": "newSpotPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1909:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 472,
																"name": "newSpotPrice_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "1932:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1924:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 470,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "1924:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1924:22:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1909:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "1909:37:3"
											},
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "buySpotPrice",
														"nameLocation": "2591:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2583:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2583:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 478,
														"name": "spotPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "2606:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 479,
														"name": "delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "2618:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "2606:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2583:40:3"
											},
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 482,
														"name": "inputValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2994:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 483,
																"name": "numItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3019:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 484,
																"name": "buySpotPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "3042:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3019:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 486,
																				"name": "numItems",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "3070:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 487,
																							"name": "numItems",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 412,
																							"src": "3082:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3093:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3082:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 490,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3081:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3070:25:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 492,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 410,
																			"src": "3098:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "3070:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 494,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3069:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3119:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3069:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3019:101:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2994:126:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2994:126:3"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3208:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 503,
																"name": "protocolFeeMultiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3251:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 504,
																	"name": "FixedPointMathLib",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "3286:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$288_$",
																		"typeString": "type(library FixedPointMathLib)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3304:3:3",
																"memberName": "WAD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "3286:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 501,
																"name": "inputValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "3222:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3233:4:3",
															"memberName": "fmul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "3222:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3222:95:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3208:109:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "3208:109:3"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 509,
														"name": "inputValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3387:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 512,
																"name": "feeMultiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "3417:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 513,
																	"name": "FixedPointMathLib",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "3432:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$288_$",
																		"typeString": "type(library FixedPointMathLib)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3450:3:3",
																"memberName": "WAD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "3432:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 510,
																"name": "inputValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "3401:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3412:4:3",
															"memberName": "fmul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "3401:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3387:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3387:67:3"
											},
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "inputValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "3526:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 519,
														"name": "protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3540:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3526:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "3526:25:3"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "newDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "3593:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 523,
														"name": "delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "3604:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3593:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "3593:16:3"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 526,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3682:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$294",
															"typeString": "enum CurveErrorCodes.Error"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 527,
															"name": "Error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "3690:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Error_$294_$",
																"typeString": "type(enum CurveErrorCodes.Error)"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3696:2:3",
														"memberName": "OK",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 291,
														"src": "3690:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$294",
															"typeString": "enum CurveErrorCodes.Error"
														}
													},
													"src": "3682:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$294",
														"typeString": "enum CurveErrorCodes.Error"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "3682:16:3"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "1015:48:3",
										"text": "@dev See {ICurve-getBuyInfo}"
									},
									"functionSelector": "7ca542ac",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyInfo",
									"nameLocation": "1077:10:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 418,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1278:8:3"
									},
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "spotPrice",
												"nameLocation": "1105:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1097:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 407,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "1132:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1124:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 409,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "numItems",
												"nameLocation": "1155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "feeMultiplier",
												"nameLocation": "1181:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1173:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "protocolFeeMultiplier",
												"nameLocation": "1212:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1204:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:152:3"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "1323:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1317:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Error_$294",
													"typeString": "enum CurveErrorCodes.Error"
												},
												"typeName": {
													"id": 420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 419,
														"name": "Error",
														"nameLocations": [
															"1317:5:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 294,
														"src": "1317:5:3"
													},
													"referencedDeclaration": 294,
													"src": "1317:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$294",
														"typeString": "enum CurveErrorCodes.Error"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "newSpotPrice",
												"nameLocation": "1350:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1342:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 422,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "newDelta",
												"nameLocation": "1384:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1376:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 424,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "inputValue",
												"nameLocation": "1414:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1406:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "1446:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1438:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:164:3"
									},
									"scope": 659,
									"src": "1068:2637:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										365
									],
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "4171:2216:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 558,
														"name": "numItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "4249:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4261:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4249:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "4245:87:3",
												"trueBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "4264:68:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 561,
																			"name": "Error",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "4286:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Error_$294_$",
																				"typeString": "type(enum CurveErrorCodes.Error)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4292:16:3",
																		"memberName": "INVALID_NUMITEMS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 292,
																		"src": "4286:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Error_$294",
																			"typeString": "enum CurveErrorCodes.Error"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4310:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4313:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4316:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4319:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 567,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4285:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_enum$_Error_$294_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(enum CurveErrorCodes.Error,int_const 0,int_const 0,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 557,
															"id": 568,
															"nodeType": "Return",
															"src": "4278:43:3"
														}
													]
												}
											},
											{
												"assignments": [
													572
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "totalPriceDecrease",
														"nameLocation": "4436:18:3",
														"nodeType": "VariableDeclaration",
														"scope": 657,
														"src": "4428:26:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 571,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4428:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 576,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "4457:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 574,
														"name": "numItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "4465:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4457:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4428:45:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 577,
														"name": "spotPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "4595:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 578,
														"name": "totalPriceDecrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "4607:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "5252:178:3",
													"statements": [
														{
															"expression": {
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 597,
																	"name": "newSpotPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "5365:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 598,
																		"name": "spotPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "5380:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 601,
																				"name": "totalPriceDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 572,
																				"src": "5400:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5392:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 599,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "5392:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5392:27:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "5380:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "5365:54:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "5365:54:3"
														}
													]
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "4591:839:3",
												"trueBody": {
													"id": 596,
													"nodeType": "Block",
													"src": "4627:362:3",
													"statements": [
														{
															"expression": {
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 580,
																	"name": "newSpotPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "4727:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4742:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4727:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "4727:16:3"
														},
														{
															"assignments": [
																585
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 585,
																	"mutability": "mutable",
																	"name": "numItemsTillZeroPrice",
																	"nameLocation": "4887:21:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 596,
																	"src": "4879:29:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 584,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4879:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 591,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 586,
																		"name": "spotPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "4911:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 587,
																		"name": "delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "4923:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "4911:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4931:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4911:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4879:53:3"
														},
														{
															"expression": {
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 592,
																	"name": "numItems",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "4946:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 593,
																	"name": "numItemsTillZeroPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "4957:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4946:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 595,
															"nodeType": "ExpressionStatement",
															"src": "4946:32:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 608,
														"name": "outputValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "5676:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "numItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "5702:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 610,
																"name": "spotPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "5725:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "5702:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 612,
																				"name": "numItems",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "5750:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 613,
																							"name": "numItems",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 539,
																							"src": "5762:8:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 614,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5773:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "5762:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5761:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5750:25:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 618,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "5778:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "5750:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5749:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5799:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "5749:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5702:98:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5676:124:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "5676:124:3"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 626,
														"name": "protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "5889:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 629,
																"name": "protocolFeeMultiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "5933:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 630,
																	"name": "FixedPointMathLib",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "5968:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$288_$",
																		"typeString": "type(library FixedPointMathLib)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5986:3:3",
																"memberName": "WAD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "5968:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 627,
																"name": "outputValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "5903:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5915:4:3",
															"memberName": "fmul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "5903:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5903:96:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5889:110:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "5889:110:3"
											},
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 635,
														"name": "outputValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "6069:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 638,
																"name": "feeMultiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "6101:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 639,
																	"name": "FixedPointMathLib",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "6116:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$288_$",
																		"typeString": "type(library FixedPointMathLib)"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6134:3:3",
																"memberName": "WAD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "6116:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 636,
																"name": "outputValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "6084:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6096:4:3",
															"memberName": "fmul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "6084:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6084:54:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6069:69:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "6069:69:3"
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 644,
														"name": "outputValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "6223:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 645,
														"name": "protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "6238:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6223:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "6223:26:3"
											},
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 648,
														"name": "newDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "6291:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 649,
														"name": "delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "6302:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "6291:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "6291:16:3"
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 652,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "6364:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$294",
															"typeString": "enum CurveErrorCodes.Error"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 653,
															"name": "Error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "6372:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Error_$294_$",
																"typeString": "type(enum CurveErrorCodes.Error)"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6378:2:3",
														"memberName": "OK",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 291,
														"src": "6372:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Error_$294",
															"typeString": "enum CurveErrorCodes.Error"
														}
													},
													"src": "6364:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$294",
														"typeString": "enum CurveErrorCodes.Error"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "6364:16:3"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3711:49:3",
										"text": "@dev See {ICurve-getSellInfo}"
									},
									"functionSelector": "097cc63d",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSellInfo",
									"nameLocation": "3774:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 545,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3976:8:3"
									},
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "spotPrice",
												"nameLocation": "3803:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3795:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 534,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "delta",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 536,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "numItems",
												"nameLocation": "3853:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3845:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "feeMultiplier",
												"nameLocation": "3879:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3871:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "protocolFeeMultiplier",
												"nameLocation": "3910:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3902:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3785:152:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4015:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Error_$294",
													"typeString": "enum CurveErrorCodes.Error"
												},
												"typeName": {
													"id": 547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 546,
														"name": "Error",
														"nameLocations": [
															"4015:5:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 294,
														"src": "4015:5:3"
													},
													"referencedDeclaration": 294,
													"src": "4015:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Error_$294",
														"typeString": "enum CurveErrorCodes.Error"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "newSpotPrice",
												"nameLocation": "4048:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4040:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 549,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "newDelta",
												"nameLocation": "4082:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4074:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 551,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "outputValue",
												"nameLocation": "4112:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4104:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4104:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "protocolFee",
												"nameLocation": "4145:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4137:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4001:165:3"
									},
									"scope": 659,
									"src": "3765:2622:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 660,
							"src": "401:5988:3",
							"usedErrors": []
						}
					],
					"src": "37:6353:3"
				},
				"id": 3
			}
		}
	}
}